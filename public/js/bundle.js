/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./client/src/game.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./client/src/game.js":
/*!****************************!*\
  !*** ./client/src/game.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// space_defender.js\n// TODO: Break into Modules Long term goal\n// TODO: Extend Webpack/npm packages to cover all ES2015 - ES2021+ Rules\n// TODO: Fix Audio Play Error ðŸš¨ \n// See ðŸ‘€ https://developers.google.com/web/updates/2017/06/play-request-was-interrupted ðŸ¤”\nconsole.warn(\"Defender Running ...\");\n\nvar Game =\n/*#__PURE__*/\nfunction () {\n  function Game(gameName, canvasId) {\n    var _this = this;\n\n    _classCallCheck(this, Game);\n\n    var canvas = document.getElementById(canvasId);\n    var width = $(window).width();\n    var height = $(window).height();\n    var self = this;\n    this._DEBUG = false; // Use turn on/off console.log's\n\n    this._DEBUG && console.log(\"gameName: \", gameName);\n    this._DEBUG && console.log(\"width: \", width);\n    this._DEBUG && console.log(\"height: \", height); // Keep score private as much as you can with JavaScript\n\n    var _score = 0;\n\n    this.incrScore = function () {\n      _score += 100 * (_this.getLevel() + 1);\n    };\n\n    this.decrScore = function () {\n      _score -= 5;\n    };\n\n    this.getScore = function () {\n      return _score;\n    };\n\n    this.resetScore = function () {\n      _score = 0;\n    }; // Keep level private as much as you can with JavaScript\n\n\n    var _level = 0;\n\n    this.incrementLevel = function () {\n      _level++;\n\n      if (_level > _this.levelData.length - 1) {\n        _level = 0;\n      }\n\n      return _level;\n    };\n\n    this.decrLevel = function () {\n      _level--;\n\n      if (_level < 0) {\n        _level = 0;\n      }\n    };\n\n    this.resetLevel = function (val) {\n      val = val ? val : 0;\n      _level = val;\n      return _level;\n    };\n\n    this.getLevel = function () {\n      return _level;\n    };\n\n    canvas.width = width;\n    canvas.height = height;\n    this.screen = canvas.getContext('2d');\n    this.gameSize = {\n      x: canvas.width,\n      y: canvas.height\n    };\n    this.keyListeners = [];\n    this.bulletCntr = 2; // this.score = 0;\n\n    this.gun_Locked = false;\n    this.gameOver = false;\n    this.paused = false;\n    this.PAUSED_TIMEOUT = 100;\n    this.HIGH_SCORES_SUFFIX = '_highScores';\n    this.invaderFireRate = 0.995; // this.level = 0;\n\n    this.fleetPatrol_X = 0;\n    this.levelData = levelData;\n    this.player = {};\n    this.playerLivesLeft = 3;\n    this.playerStatus = 'ALIVE'; // 'ALIVE' | 'DEAD'\n\n    this.radar = false;\n    this.imageLoadingProgressCallback = {};\n    this.images = {};\n    this.imageUrls = [];\n    this.imagesLoaded = 0;\n    this.imagesFailedToLoad = 0;\n    this.imagesIndex = 0; // Image Methods\n\n    this.getImage = getImage;\n    this.imageLoadedCallback = imageLoadedCallback;\n    this.imageLoadErrorCallback = imageLoadErrorCallback;\n    this.loadImage = loadImage;\n    this.loadImages = loadImages;\n    this.queueImage = queueImage; // Load and Call images\n\n    this.backgroundImg = {};\n    this.explosionImages = [];\n    this.togglePaused = togglePaused; // function\n\n    this.keyboarder = new Keyboarder(this); // Todo --- Put this into an obj to use as sound => url mapping\n    // Load our sounds here\n\n    loadSound(\"/sounds/rocket-ver-1.wav\", function (shootSound) {\n      self.shootSound = shootSound;\n    });\n    loadSound(\"/sounds/explosion-ver-3.wav\", function (explosionSound) {\n      self.explosionSound = explosionSound;\n    });\n    loadSound(\"/sounds/Alien_Gun-ver-1.wav\", function (alienShootSound) {\n      self.alienShootSound = alienShootSound;\n    });\n\n    self.animate = function (time) {\n      // console.log(\"delta: \", time - self.lastTime);\n      self.lastTime = time;\n\n      if (this.gameOver) {\n        // show Game Over Dialog Box Here!!\n        this.gameOver = false;\n        game.over();\n        this._DEBUG && console.log(\"***** gameOver: *****\");\n        return;\n      }\n\n      if (self.paused) {\n        setTimeout(function () {\n          requestAnimationFrame(self.animate);\n        }, this.PAUSED_TIMEOUT);\n      } else {\n        self.update(time);\n        self.draw(self.screen, self.gameSize);\n        self.drawScoreBox();\n        self.drawLevelBox();\n        self.drawShipsBox();\n        requestAnimationFrame(self.animate);\n      }\n    };\n\n    return this;\n  }\n\n  _createClass(Game, [{\n    key: \"start\",\n    value: function start() {\n      // We start at level 0 of course\n      this.loadLevel();\n      this.animate();\n    } // ðŸš§ Under construction ðŸš§\n\n    /* reset: function() {\n        this.bulletCntr = 2;\n        this.score = 0;\n        this.gun_Locked = false;\n        this.gameOver = false;\n        this.paused = false;\n        this.invaderFireRate = 0.995;\n        this.resetLevel(0);\n        this.radar = false;\n        this.bulletCntr = 20;\n        this.gun_Locked = false;\n        this.gameOver = false;\n        this.paused = false;\n    }, */\n\n  }, {\n    key: \"update\",\n    value: function update(time) {\n      var bodies = this.bodies;\n\n      var tempBodies = _toConsumableArray(bodies);\n\n      var isCollidingWithSomething = function isCollidingWithSomething(b1) {\n        return tempBodies.filter(function (b2) {\n          return colliding(b1, b2);\n        }).length > 0;\n      };\n\n      var filteredBodies = tempBodies.filter(isCollidingWithSomething);\n      var invaderFilteredBodies = [];\n      var playerFilteredBodies = []; // Filter for both using 'for loop'\n      // This is much faster than the slower array filter method\n\n      for (var i = 0; i < filteredBodies.length; i++) {\n        var unknownFilteredBody = filteredBodies[i];\n\n        if (unknownFilteredBody instanceof Invader) {\n          invaderFilteredBodies.push(unknownFilteredBody);\n        }\n\n        if (unknownFilteredBody instanceof Player) {\n          playerFilteredBodies.push(unknownFilteredBody);\n        }\n      }\n\n      for (var _i = 0; _i < invaderFilteredBodies.length; _i++) {\n        if (invaderFilteredBodies[_i].name === \"invader\") {\n          // this.score += 100 * (this.getLevel() + 1);\n          this.incrScore();\n          invaderFilteredBodies[_i].painter = new ExplosionSpritePainter(game.explosionImages, 'Invader');\n          invaderFilteredBodies[_i].name = \"explosion\";\n\n          try {\n            this.explosionSound.load();\n            this.explosionSound.play();\n          } catch (error) {\n            console.error('Error with loading & playing sound: ', error); // pass exception object to error handler\n          }\n\n          invaderFilteredBodies[_i].size.x = invaderFilteredBodies[_i].size.x * 2.5;\n          invaderFilteredBodies[_i].size.y = invaderFilteredBodies[_i].size.y * 2.5;\n        }\n      }\n\n      for (var _i2 = 0; _i2 < playerFilteredBodies.length; _i2++) {\n        if (playerFilteredBodies[_i2].name === \"player\") {\n          // If player is still alive set him to dead he just got killed LOL\n          if (this.playerStatus === 'ALIVE') {\n            this.playerStatus = 'DEAD';\n            this.playerLivesLeft--;\n          }\n\n          playerFilteredBodies[_i2].name = \"explosion\";\n          playerFilteredBodies[_i2].painter = new ExplosionSpritePainter(game.explosionImages, 'Player');\n\n          try {\n            this.explosionSound.load();\n            this.explosionSound.play();\n          } catch (error) {\n            console.error();\n            'Error with loading & playing sound: ', error; // pass exception object to error handler\n          }\n\n          var imagesSizeMultiplier = this.playerLivesLeft ? 2.5 : 6.0;\n          playerFilteredBodies[_i2].size.x = playerFilteredBodies[_i2].size.x * imagesSizeMultiplier;\n          playerFilteredBodies[_i2].size.y = playerFilteredBodies[_i2].size.y * imagesSizeMultiplier;\n        }\n      }\n\n      var notCollidingWithAnything = function notCollidingWithAnything(b1) {\n        return bodies.filter(function (b2) {\n          return colliding(b1, b2);\n        }).length === 0;\n      };\n\n      this.bodies = this.bodies.filter(notCollidingWithAnything); // Are all Invaders destroyed \n\n      var invadersLeftAlive = this.bodies.filter(function (unknownBody) {\n        return unknownBody instanceof Invader;\n      });\n\n      if (invadersLeftAlive.length < 5 && invadersLeftAlive.length >= 3) {\n        this.invaderFireRate = 0.98; // Radar is on and stays on until all aliens are dead.\n\n        this.radar = true;\n      } else if (invadersLeftAlive.length < 3 && invadersLeftAlive.length >= 2) {\n        this.invaderFireRate = 0.96;\n      } else if (invadersLeftAlive.length < 2) {\n        this.invaderFireRate = 0.92;\n      }\n\n      var allFilteredBodies = [].concat(invaderFilteredBodies, playerFilteredBodies); // Add bodies back with explosion\n\n      if (allFilteredBodies.length > 0) {\n        for (var j = 0; j < allFilteredBodies.length; j++) {\n          this.bodies.push(allFilteredBodies[j]);\n        }\n      } // Remove all bodies that are not visible on the screen \n\n\n      this.bodies = this.bodies.filter(function (theBody) {\n        return theBody.visible;\n      });\n      this.bodies = this.bodies.filter(function (theBody) {\n        return theBody.remove === false;\n      });\n\n      if (this.playerLivesLeft < 1) {\n        //delay game over to let animation finish\n        setTimeout(function () {\n          this.gameOver = true;\n        }, 750);\n      }\n\n      if (invadersLeftAlive.length <= 0 && this.playerLivesLeft > 0) {\n        this.paused = true;\n        this.playerLivesLeft < 8 ? this.playerLivesLeft++ : this.playerLivesLeft;\n        this.incrementLevel();\n        setTimeout(function () {\n          this.game.loadLevel();\n        }, 1500);\n      } // Update Position\n\n\n      for (var idx = 0; idx < this.bodies.length; idx++) {\n        this.bodies[idx].update(time);\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(screen, gameSize) {\n      screen.clearRect(0, 0, gameSize.x, gameSize.y);\n      screen.drawImage(this.backgroundImg, 0, 0, gameSize.x, gameSize.y);\n\n      for (var i = 0; i < this.bodies.length; i++) {\n        this.bodies[i].draw(this.screen, this.bodies[i]);\n      }\n    }\n  }, {\n    key: \"loadLevel\",\n    value: function loadLevel() {\n      var _this2 = this;\n\n      var level = this.getLevel();\n      this._DEBUG && console.log(\" \\n *** Loading level Number \".concat(level, \" ***\"));\n      var _this$levelData$level = this.levelData[level],\n          row = _this$levelData$level.row,\n          col = _this$levelData$level.col,\n          behavior = _this$levelData$level.behavior,\n          invaderImage = _this$levelData$level.invaderImage,\n          speedX = _this$levelData$level.speedX,\n          invaderFireRate = _this$levelData$level.invaderFireRate,\n          backgroundImg = _this$levelData$level.backgroundImg;\n      this.radar = false;\n      this.speedX_Val = speedX;\n      this.invaderFireRate = invaderFireRate;\n      this.backgroundImg = backgroundImg;\n      this.player = new Player(this, [new CycleImages(16, 32)], new SpritePainter([game.playerImg]), this.gameSize);\n      this.bodies = createInvaders(this, this.gameSize, behavior, invaderImage, row, col).concat(this.player); // Add a half second-delay to slow\n      // the pace of the game on a level change.\n\n      setTimeout(function () {\n        _this2.paused = false;\n      }, 500);\n    }\n  }, {\n    key: \"addKeyListener\",\n    value: function addKeyListener(keyAndListener) {\n      game.keyListeners.push(keyAndListener);\n    }\n  }, {\n    key: \"findKeyListener\",\n    value: function findKeyListener(key) {\n      var listener;\n      game.keyListeners.forEach(function (keyAndListener) {\n        var currentKey = keyAndListener.key;\n\n        if (currentKey === key) {\n          listener = keyAndListener.listener;\n        }\n      });\n      return listener;\n    }\n  }, {\n    key: \"keyPressed\",\n    value: function keyPressed(e) {\n      var listener;\n      key = undefined;\n\n      switch (e.keyCode) {\n        case 67:\n          key = 'c';\n          break;\n\n        case 80:\n          key = 'p';\n          break;\n\n        case 83:\n          key = 's';\n          break;\n      }\n\n      listener = game.findKeyListener(key);\n\n      if (listener) {\n        listener();\n      }\n    }\n  }, {\n    key: \"keyUp\",\n    value: function keyUp(e) {\n      var listener;\n      key = undefined;\n\n      switch (e.keyCode) {\n        case 32:\n          key = 'spacebar';\n          break;\n\n        case 37:\n          key = 'left arrow';\n          break;\n\n        case 39:\n          key = 'right arrow';\n          break;\n\n        case 38:\n          key = 'up arrow';\n          break;\n\n        case 40:\n          key = 'down arrow';\n          break;\n      }\n\n      listener = game.findKeyListener(key);\n\n      if (listener) {\n        listener();\n      }\n    }\n  }, {\n    key: \"addBody\",\n    value: function addBody(body) {\n      this.bodies.push(body);\n    }\n  }, {\n    key: \"invadersBelow\",\n    value: function invadersBelow(invader) {\n      return this.bodies.filter(function (b) {\n        return b instanceof Invader && b.center.y > invader.center.y && b.center.x - invader.center.x < invader.size.x;\n      }).length > 0;\n    }\n  }, {\n    key: \"getHighScores\",\n    value: function getHighScores() {\n      var key = game.gameName + game.HIGH_SCORES_SUFFIX,\n          highScoresString = localStorage[key];\n\n      if (highScoresString === undefined) {\n        localStorage[key] = JSON.stringify([]);\n      }\n\n      return JSON.parse(localStorage[key]);\n    }\n  }, {\n    key: \"setHighScore\",\n    value: function setHighScore() {\n      var key = gameName + game.HIGH_SCORES_SUFFIX,\n          highScoresString = localStorage;\n      highScores.unshift(highScore);\n      localStorage[key] = JSON.stringify(highScores);\n    }\n  }, {\n    key: \"clearHighScores\",\n    value: function clearHighScores() {\n      localStorage[game.gameName + this.HIGH_SCORES_SUFFIX] = JSON.stringify([]);\n    }\n  }, {\n    key: \"over\",\n    value: function over() {\n      var highScore = 0,\n          highScores = [{\n        score: 100\n      }, {\n        score: 75\n      }, {\n        score: 50\n      }];\n      var lastOnList = $('#highScoreList li').last().text();\n\n      if (highScores.length === 0 || game.getScore() > highScores[0].score) {\n        // this.showHighScores();\n        game.highScoreToast.insertAfter('canvas');\n        game.highScoreToast.show();\n        $('#highScoreParagraph').html(game.getScore());\n      } else {\n        game.gameOverToast.insertAfter('canvas');\n        game.gameOverToast.show();\n        $('#highScoreParagraph').html(game.getScore());\n      }\n\n      $('#inputScore').val(game.getScore()); // this.gameOver = true;\n      // this.lastScore = this.score;\n      // this.score = 0;\n    } // High Scores ............................................................\n\n  }, {\n    key: \"showHighScores\",\n    value: function showHighScores() {\n      $(\"#highScoreParagraph\").show();\n      $(\"#highScoreParagraph\").text(this.getScore());\n      $(\"#highScoreToast\").text(this.getScore());\n      this.updateHighScoreList();\n    }\n  }, {\n    key: \"updateHighScoreList\",\n    value: function updateHighScoreList() {\n      var el,\n          highScores = game.getHighScores(),\n          length = highScores.length,\n          highScore,\n          listParent = highScoreList.parentNode;\n    }\n  }, {\n    key: \"drawScoreBox\",\n    value: function drawScoreBox() {\n      var text = 'SCORE: ' + this.getScore();\n      this.screen.fillText(text, this.gameSize.x * 0.075, this.gameSize.y * 0.050);\n      this.screen.fillStyle = 'white';\n      var fontHeight = this.gameSize.y * 0.0375;\n      this.screen.font = fontHeight + \"px Helvetica\";\n      this.screen.textAlign = 'left';\n      this.screen.textBaseline = 'top';\n    }\n  }, {\n    key: \"drawLevelBox\",\n    value: function drawLevelBox() {\n      var playerLevel = this.getLevel() + 1;\n      var text = 'Level: ' + playerLevel;\n      this.screen.fillText(text, this.gameSize.x * 0.49, this.gameSize.y * 0.050);\n      this.screen.fillStyle = 'white';\n      var fontHeight = this.gameSize.y * 0.0375;\n      this.screen.font = fontHeight + \"px Helvetica\";\n      this.screen.textAlign = 'left';\n      this.screen.textBaseline = 'top';\n    }\n  }, {\n    key: \"drawShipsBox\",\n    value: function drawShipsBox() {\n      var text = \"Ships: \".concat(this.playerLivesLeft);\n      this.screen.fillText(text, this.gameSize.x * 0.850, this.gameSize.y * 0.050);\n      this.screen.fillStyle = 'white';\n      var fontHeight = this.gameSize.y * 0.0375;\n      this.screen.font = fontHeight + \"px Helvetica\";\n      this.screen.textAlign = 'left';\n      this.screen.textBaseline = 'top';\n    }\n  }]);\n\n  return Game;\n}(); // end of Game constructor\n\n\nvar imageLoadedCallback = function imageLoadedCallback(e) {\n  this.imagesLoaded++;\n};\n\nvar imageLoadErrorCallback = function imageLoadErrorCallback(e) {\n  this.imagesFailedToLoad++;\n};\n\nvar loadImage = function loadImage(imageUrl) {\n  var image = new Image();\n  var self = this;\n  image.src = imageUrl;\n  image.addEventListener('load', function (e) {\n    self.imageLoadedCallback(e);\n  });\n  image.addEventListener('error', function (e) {\n    self.imageLoadErrorCallback(e);\n  });\n  this.images[imageUrl] = image;\n};\n\nvar loadImages = function loadImages() {\n  if (this.imagesIndex < this.imageUrls.length) {\n    this.loadImage(this.imageUrls[this.imagesIndex]);\n    this.imagesIndex++;\n  }\n\n  return (this.imagesLoaded + this.imagesFailedToLoad) / this.imageUrls.length * 100;\n}; // Call to add image to queue\n\n\nvar queueImage = function queueImage(imageUrl) {\n  this.imageUrls.push(imageUrl);\n};\n\nvar getImage = function getImage(imageUrl) {\n  return this.images[imageUrl];\n};\n\nvar Player =\n/*#__PURE__*/\nfunction () {\n  function Player(game, behavior, painter, gameSize) {\n    _classCallCheck(this, Player);\n\n    this.name = \"player\";\n    this.gameSize = gameSize;\n    this.behavior = behavior;\n    this.painter = painter;\n    this.game = game;\n    this.step_X = 4;\n    this.step_Y = 4;\n    this.dx = this.dy = 1.015;\n    this.animating = false;\n    this.remove = false;\n    this.visible = true;\n    this.radar = false;\n    this.size = getSpriteSize('player', this.gameSize);\n    this.center = {\n      x: gameSize.x / 2,\n      y: gameSize.y - 1.0 * this.size.y\n    };\n  }\n\n  _createClass(Player, [{\n    key: \"update\",\n    value: function update(time) {\n      //Loop through all behaviors\n      for (var i = 0; i < this.behavior.length; i++) {\n        this.behavior[i].execute(this, this.gameSize, time);\n      }\n\n      if (this.game.keyboarder.isDown(this.game.keyboarder.KEYS.LEFT)) {\n        this.step_X *= this.dx;\n        this.step_X = this.step_X > 8 ? 8 : this.step_X;\n        this.center.x = this.center.x < 0 - this.size.x / 2 ? this.game.gameSize.x : this.center.x;\n        this.center.x -= this.step_X;\n      }\n\n      if (this.game.keyboarder.isDown(this.game.keyboarder.KEYS.RIGHT)) {\n        this.step_X *= this.dx;\n        this.step_X = this.step_X > 8 ? 8 : this.step_X;\n        this.center.x = this.center.x > this.game.gameSize.x + this.size.x / 2 ? 0 : this.center.x;\n        this.center.x += this.step_X;\n      }\n\n      if (this.game.keyboarder.isDown(this.game.keyboarder.KEYS.UP)) {\n        this.step_Y *= this.dy;\n        this.step_Y = this.step_Y > 8 ? 8 : this.step_Y;\n        this.center.y = this.center.y > this.game.gameSize.y + this.size.y / 2 ? 0 : this.center.y;\n        this.center.y += this.step_Y;\n      }\n\n      if (this.game.keyboarder.isDown(this.game.keyboarder.KEYS.DOWN)) {\n        this.step_Y *= this.dy;\n        this.step_Y = this.step_Y > 8 ? 8 : this.step_Y;\n        this.center.y = this.center.y < 0 - this.size.y / 2 ? this.game.gameSize.y : this.center.y;\n        this.center.y -= this.step_Y;\n      }\n\n      if (this.game.keyboarder.isDown(this.game.keyboarder.KEYS.SPACE) && !this.game.gun_Locked) {\n        this.game.bulletCntr--;\n        this.game.gun_Locked = this.game.bulletCntr <= 0 ? true : false;\n        var missle = new Missle({\n          x: this.center.x,\n          y: this.center.y - this.size.y / 2\n        }, {\n          x: 0,\n          y: -this.gameSize.y * 0.0150\n        }, this.gameSize);\n        this.game.decrScore();\n        this.game.addBody(missle);\n\n        try {\n          this.game.shootSound.load();\n          this.game.shootSound.play();\n        } catch (error) {\n          console.error('Error loading sound: ', error);\n        }\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(screen, body) {\n      this.painter.draw(screen, body);\n    }\n  }]);\n\n  return Player;\n}();\n\nvar Invader =\n/*#__PURE__*/\nfunction () {\n  function Invader(game, center, behavior, painter, gameSize) {\n    _classCallCheck(this, Invader);\n\n    this.name = \"invader\";\n    this.game = game;\n    this.gameSize = gameSize;\n    this.behavior = behavior;\n    this.painter = painter;\n    this.visible = true;\n    this.animating = false;\n    this.remove = false; // this.game.radar = false;\n\n    this.size = getSpriteSize('invader', this.gameSize);\n    this.center = center;\n    this.radians = 0.025;\n    this.totalRadians = 0;\n    this.scaleHeight = 1.5;\n    this.patrolX = 0;\n    this.speedX = gameSize.x * this.game.speedX_Val;\n  }\n\n  _createClass(Invader, [{\n    key: \"update\",\n    value: function update(time) {\n      var targetLocation = {};\n\n      for (var i = 0; i < this.behavior.length; i++) {\n        this.behavior[i].execute(this, this.gameSize, time);\n      }\n\n      this.visible = this.center.y > this.gameSize.y * 1.10 ? false : true;\n\n      if (Math.random() > this.game.invaderFireRate && !this.game.invadersBelow(this)) {\n        if (this.game.radar === true) {\n          targetLocation = radarGuidance(this.game.player, this, this.gameSize.y * 0.0075);\n        } else {\n          targetLocation = {\n            x: 0,\n            y: this.gameSize.y * 0.0075\n          };\n        }\n\n        var bullet = new Bullet({\n          x: this.center.x,\n          y: this.center.y + this.size.x / 2\n        }, targetLocation, this.gameSize);\n        this.game.addBody(bullet);\n\n        try {\n          this.game.alienShootSound.load();\n          this.game.alienShootSound.play();\n        } catch (error) {\n          console.error('Error adding alienShootSound: ', error);\n        }\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(screen, body) {\n      this.painter.draw(screen, body);\n    }\n  }]);\n\n  return Invader;\n}();\n\nvar createInvaders = function createInvaders(game, gameSize, behavior, invaderImage, row, col) {\n  this.game = game;\n  var invaders = [],\n      fleetWidth = 0,\n      size = {};\n  size = getSpriteSize('invader', gameSize);\n  fleetWidth = 2 * col * size.x;\n  this.game.fleetPatrol_X = (gameSize.x - fleetWidth) / 2; // console.log(\"this.game.fleetPatrol_X: \",this.game.fleetPatrol_X);\n\n  for (var i = 0; i < row * col; i++) {\n    var x = this.game.fleetPatrol_X + i % col * (gameSize.x * 0.075);\n    var y = gameSize.y * 0.075 + i % row * (gameSize.y * 0.075);\n    invaders.push(new Invader(game, {\n      x: x,\n      y: y\n    }, [behavior, new CycleImages(16, 32)], new SpritePainter([invaderImage]), gameSize));\n  }\n\n  return invaders;\n};\n\nvar getSpriteSize = function getSpriteSize(spriteName, gameSize) {\n  var size = {}; // not const\n  // TODO: Clean this up and figure out what kind oa screen the user has open\n  // 4:3 16:9 : 21:9 etc. and scale the images from there.\n\n  if (spriteName === 'player') {\n    if (gameSize.x > 1400) {\n      size = {\n        x: gameSize.x * 0.050,\n        y: gameSize.x * 0.0750\n      };\n    } else if (gameSize.x > 1024) {\n      size = {\n        x: gameSize.x * 0.060,\n        y: gameSize.x * 0.090\n      };\n    } else if (gameSize.x > 768) {\n      size = {\n        x: gameSize.x * 0.075,\n        y: gameSize.x * 0.1125\n      };\n    } else if (gameSize.x > 401) {\n      size = {\n        x: gameSize.x * 0.100,\n        y: gameSize.x * 0.150\n      };\n    } else {\n      size = {\n        x: 20,\n        y: 20\n      }; // x: 15, y: 15\n    }\n  } else if (spriteName === 'invader') {\n    if (gameSize.x > 1400) {\n      size = {\n        x: gameSize.x * 0.0325,\n        y: gameSize.x * 0.0325\n      };\n    } else if (gameSize.x > 1024) {\n      size = {\n        x: gameSize.x * 0.0375,\n        y: gameSize.x * 0.0375\n      };\n    } else if (gameSize.x > 768) {\n      size = {\n        x: gameSize.x * 0.0425,\n        y: gameSize.x * 0.0425\n      };\n    } else if (gameSize.x > 401) {\n      size = {\n        x: gameSize.x * 0.0525,\n        y: gameSize.x * 0.0525\n      };\n    } else {\n      size = {\n        x: 20,\n        y: 20\n      }; // x: 15, y: 15\n    }\n  } else if (spriteName === 'missle') {\n    if (gameSize.x > 1024) {\n      size = {\n        x: 15,\n        y: 25\n      };\n    } else if (gameSize.x > 768) {\n      size = {\n        x: 10,\n        y: 16\n      };\n    } else if (gameSize.x > 401) {\n      size = {\n        x: 6,\n        y: 10\n      };\n    } else {\n      size = {\n        x: 4,\n        y: 7\n      }; // x: 15, y: 15\n    }\n  } else if (spriteName === 'bullet') {\n    if (gameSize.x > 1024) {\n      size = {\n        x: 15,\n        y: 15\n      };\n    } else if (gameSize.x > 768) {\n      size = {\n        x: 12,\n        y: 12\n      };\n    } else if (gameSize.x > 401) {\n      size = {\n        x: 8,\n        y: 8\n      };\n    } else {\n      size = {\n        x: 4,\n        y: 4\n      }; // x: 15, y: 15\n    }\n  }\n\n  return size;\n}; // Movements the aliens take\n\n\nvar rightToLeft = {\n  execute: function execute(body, gameSize) {\n    if (body.patrolX < -body.game.fleetPatrol_X || body.patrolX > body.game.fleetPatrol_X) {\n      body.speedX = -body.speedX; // Drops down after every patrol\n\n      body.center.y += body.size.y * 2.5; // body.speedX += body.speedX;\n    }\n\n    body.center.x += body.speedX;\n    body.patrolX += body.speedX;\n  }\n}; // Aliens will follow a  sinewave or snake patternp  \n\nvar sineWave = {\n  execute: function execute(body, gameSize) {\n    // console.log(\"In sineWave execute's this: %j\", body)\n    if (body.patrolX < -body.game.fleetPatrol_X || body.patrolX > body.game.fleetPatrol_X) {\n      body.speedX = -body.speedX;\n      body.radians = -body.radians; // Drops down after every patrol\n\n      body.center.y += body.size.y; // body.speedX += body.speedX;\n    }\n\n    body.totalRadians += body.radians;\n    body.center.x += body.speedX;\n    body.patrolX += body.speedX;\n    body.center.y += body.scaleHeight * Math.sin(body.totalRadians);\n  }\n};\nvar halfCircle = {\n  execute: function execute(body, gameSize) {\n    if (body.patrolX < -body.game.fleetPatrol_X || body.patrolX > body.game.fleetPatrol_X) {\n      body.speedX = -body.speedX; // body.radians = -body.radians;\n      // Drops down after every patrol\n\n      body.center.y += body.size.y;\n    }\n\n    body.totalRadians += body.radians * 0.5;\n    body.center.x += body.speedX;\n    body.patrolX += body.speedX;\n    body.center.y += body.scaleHeight * Math.sin(body.totalRadians);\n  }\n};\nvar dropDiagonal = {\n  execute: function execute(body, gameSize) {\n    if (body.patrolX < -body.game.fleetPatrol_X || body.patrolX > body.game.fleetPatrol_X) {\n      body.speedX = -body.speedX; // body.radians = -body.radians;\n      // Drops down after every patrol\n\n      body.center.y += body.size.y;\n    }\n\n    body.center.x += body.speedX;\n    body.patrolX += body.speedX;\n    body.center.y += body.speedX * 0.5;\n  }\n};\n\nvar Bullet =\n/*#__PURE__*/\nfunction () {\n  function Bullet(center, velocity, gameSize) {\n    _classCallCheck(this, Bullet);\n\n    this.gameSize = gameSize;\n    this.center = center;\n    this.velocity = velocity;\n    this.visible = true;\n    this.remove = false;\n    this.size = getSpriteSize('bullet', gameSize);\n  }\n\n  _createClass(Bullet, [{\n    key: \"update\",\n    value: function update() {\n      this.center.x += this.velocity.x;\n      this.center.y += this.velocity.y; // If the bullet moves off the board\n      // set to visible = false\n\n      if (this.center.y < 0 - this.gameSize.y * 0.10 || this.center.y > this.gameSize.y * 1.10 || this.center.x < 0 - this.gameSize.x * 0.10 || this.center.x > this.gameSize.x * 1.10) {\n        this.visible = false;\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(screen, body) {\n      screen.drawImage(game.enemy_bulletImg, body.center.x - body.size.x / 2, body.center.y - body.size.y / 2, body.size.x, body.size.y);\n    }\n  }]);\n\n  return Bullet;\n}();\n\nvar Missle =\n/*#__PURE__*/\nfunction () {\n  function Missle(center, velocity, gameSize) {\n    _classCallCheck(this, Missle);\n\n    this.gameSize = gameSize; // this.size = { x: 15, y: 25 };\n\n    this.size = getSpriteSize('missle', gameSize);\n    this.center = center;\n    this.velocity = velocity;\n    this.visible = true;\n    this.remove = false;\n  }\n\n  _createClass(Missle, [{\n    key: \"update\",\n    value: function update() {\n      this.center.x += this.velocity.x;\n      this.center.y += this.velocity.y; // If the Missle moves off the board\n      // set visible to fasle\n\n      if (this.center.y < 0 - this.gameSize.y * 0.10 || this.center.y > this.gameSize.y * 1.10 || this.center.x < 0 - this.gameSize.x * 0.10 || this.center.x > this.gameSize.x * 1.10) {\n        this.visible = false;\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(screen, body) {\n      screen.drawImage(game.missleImg, body.center.x - body.size.x / 2, body.center.y - body.size.y / 2, body.size.x, body.size.y);\n    }\n  }]);\n\n  return Missle;\n}();\n\nvar Keyboarder = function Keyboarder(game) {\n  var keyState = {}; // not const\n\n  window.onkeydown = function (e) {\n    keyState[e.keyCode] = true;\n    game.keyPressed(e);\n  };\n\n  window.onkeyup = function (e) {\n    keyState[e.keyCode] = false;\n    game.keyUp(e);\n  };\n\n  this.isDown = function (keyCode) {\n    return keyState[keyCode] === true;\n  };\n\n  this.KEYS = {\n    LEFT: 37,\n    RIGHT: 39,\n    UP: 40,\n    DOWN: 38,\n    SPACE: 32,\n    P: 80\n  };\n}; // Detect collisions\n\n\nvar colliding = function colliding(b1, b2) {\n  return !(b1 === b2 || b1 instanceof Player && b2 instanceof Missle || b1 instanceof Missle && b2 instanceof Player || b1 instanceof Bullet && b2 instanceof Bullet || b1 instanceof Missle && b2 instanceof Missle || b1 instanceof Invader && b2 instanceof Invader || b1 instanceof Bullet && b2 instanceof Missle || b1 instanceof Missle && b2 instanceof Bullet || b1 instanceof Invader && b2 instanceof Bullet || b1 instanceof Bullet && b2 instanceof Invader || b1.center.x + b1.size.x / 2 < b2.center.x - b2.size.x / 2 || b1.center.y + b1.size.y / 2 < b2.center.y - b2.size.y / 2 || b1.center.x - b1.size.x / 2 > b2.center.x + b2.size.x / 2 || b1.center.y - b1.size.y / 2 > b2.center.y + b2.size.y / 2);\n};\n\nvar togglePaused = function togglePaused() {\n  if (!this.paused) {\n    game.pausedToast && game.pausedToast.insertAfter('canvas');\n    game.pausedToast && game.pausedToast.show();\n  } else {\n    $('#pausedToast').detach();\n  }\n\n  this.paused = !this.paused;\n};\n\nvar loadSound = function loadSound(url, callback) {\n  var loaded = function loaded() {\n    callback(sound);\n    sound.removeEventListener('canplaythrough', loaded);\n  };\n\n  var sound = new Audio(url);\n  sound.addEventListener('canplaythrough', loaded);\n  sound.load();\n};\n\nvar radarGuidance = function radarGuidance(shooter, target, velocity) {\n  var rev = -1,\n      dx = shooter.center.x - target.center.x,\n      dy = shooter.center.y - target.center.y,\n      theta = Math.atan(dy / dx);\n  if (target.center.x < shooter.center.x && target.center.y > shooter.center.y) rev = 1;else if (target.center.x < shooter.center.x && target.center.y < shooter.center.y) rev = 1;\n  var velocity_Dx = rev * velocity * Math.cos(theta),\n      velocity_Dy = rev * velocity * Math.sin(theta);\n  return {\n    x: velocity_Dx,\n    y: velocity_Dy\n  };\n};\n\nvar SpritePainter =\n/*#__PURE__*/\nfunction () {\n  function SpritePainter(images) {\n    _classCallCheck(this, SpritePainter);\n\n    this.images = images;\n    this.imagesIndex = 0;\n  }\n\n  _createClass(SpritePainter, [{\n    key: \"advance\",\n    value: function advance(body) {\n      if (this.imagesIndex === this.images.length - 1) {\n        this.imagesIndex = 0;\n      } else {\n        this.imagesIndex++;\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(screen, body) {\n      var spriteImage = this.images[this.imagesIndex];\n      screen.drawImage(spriteImage, body.center.x - body.size.x / 2, body.center.y - body.size.y / 2, body.size.x, body.size.y);\n    }\n  }]);\n\n  return SpritePainter;\n}();\n\nvar ExplosionSpritePainter =\n/*#__PURE__*/\nfunction () {\n  function ExplosionSpritePainter(images, kindOfBody) {\n    _classCallCheck(this, ExplosionSpritePainter);\n\n    this.images = images;\n    this.imagesIndex = 0;\n    this.kindOfBody = kindOfBody ? kindOfBody : null;\n  }\n\n  _createClass(ExplosionSpritePainter, [{\n    key: \"advance\",\n    value: function advance(body) {\n      // Last image so reset everything here\n      if (this.imagesIndex === this.images.length - 1) {\n        if (this.kindOfBody === 'Invader') {\n          body.remove = true;\n          body.visible = false;\n          body.animating = false;\n        } else if (this.kindOfBody === 'Player') {\n          body.remove = false;\n          body.visible = true;\n          body.animating = false;\n          body.name = 'player';\n          body.size.x /= game.playerLivesLeft ? 2.5 : 6.0;\n          body.size.y /= game.playerLivesLeft ? 2.5 : 6.0; // Player still alive then put them back on the canvas\n\n          if (game.playerLivesLeft > 0 && game.playerStatus === 'DEAD') {\n            body.painter = new SpritePainter([game.playerImg]);\n            game.playerStatus = 'ALIVE';\n          }\n        } else {\n          body.remove = true;\n          body.visible = false;\n          body.animating = false;\n        }\n      } else {\n        this.imagesIndex++;\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(screen, body) {\n      var spriteImage = this.images[this.imagesIndex];\n      body.animating = true;\n\n      try {\n        screen.drawImage(spriteImage, body.center.x - body.size.x / 2, body.center.y - body.size.y / 2, body.size.x, body.size.y);\n      } catch (error) {\n        // statements to handle any exceptions\n        console.warn('Error writing spite to screen ', error); // pass exception object to error handler\n      }\n    }\n  }]);\n\n  return ExplosionSpritePainter;\n}();\n\nvar CycleImages =\n/*#__PURE__*/\nfunction () {\n  function CycleImages(frameCnt, PAGE_FLIP_INTERVAL) {\n    _classCallCheck(this, CycleImages);\n\n    this.frameCounter = 0;\n    this.frameCnt = frameCnt;\n    this.lastAdvance = 0;\n    this.PAGE_FLIP_INTERVAL = PAGE_FLIP_INTERVAL;\n  }\n\n  _createClass(CycleImages, [{\n    key: \"execute\",\n    value: function execute(body, gameSize, time) {\n      if (time - this.lastAdvance > this.PAGE_FLIP_INTERVAL) {\n        body.painter.advance(body);\n        this.lastAdvance = time;\n      }\n    }\n  }]);\n\n  return CycleImages;\n}();\n/* We store level data here in an array of  objects\n * @speedX - speed of Invaders\n * @behavior - what pattern do the Invader take on the screen\n * @row & @col how many are on the screen \n * @backgroundImg placeholder obj for background image.\n * @invaderFireRate only small percentage is needed > 10%\n * @invaderHits number of hits to kill an Invader -- For future use.\n*/\n// TODO: Make this a DB Mongo, MySql, or Postgres call who knows???\n\n\nvar levelData = [{\n  speedX: 0.0020,\n  behavior: sineWave,\n  invaderImage: {},\n  row: 2,\n  col: 7,\n  backgroundImg: {},\n  invaderFireRate: 0.995,\n  invaderHits: 1\n}, {\n  speedX: 0.0020,\n  behavior: halfCircle,\n  invaderImage: {},\n  row: 3,\n  col: 7,\n  backgroundImg: {},\n  invaderFireRate: 0.995,\n  invaderHits: 1\n}, {\n  speedX: 0.0022,\n  behavior: rightToLeft,\n  invaderImage: {},\n  row: 4,\n  col: 7,\n  backgroundImg: {},\n  invaderFireRate: 0.994,\n  invaderHits: 1\n}, {\n  speedX: 0.00225,\n  behavior: dropDiagonal,\n  invaderImage: {},\n  row: 5,\n  col: 7,\n  backgroundImg: {},\n  invaderFireRate: 0.994,\n  invaderHits: 1\n}]; // We create a new game here\n\nvar game = new Game(\"Defender\", \"screen\"); // Pause the game\n\ngame.addKeyListener({\n  key: 'p',\n  listener: function listener() {\n    game.togglePaused();\n  }\n}); // Position the Player back at the start\n\ngame.addKeyListener({\n  key: 'c',\n  listener: function listener() {\n    game.player.center = {\n      x: game.gameSize.x / 2,\n      y: game.gameSize.y - 1.0 * game.player.size.y\n    };\n  }\n}); // THE Hyperspace button to to get out of a TOUGH JAM?\n// Maybe LOL!!! It is random positioning\n// Had to use \"s\" as \"h\" my preferred key and \"x\" are\n// somehow intercepted by the browser.\n\ngame.addKeyListener({\n  key: 's',\n  listener: function listener() {\n    game.player.center = {\n      x: game.gameSize.x * Math.random(),\n      y: game.gameSize.y * Math.random() - game.player.size.y\n    };\n  }\n});\ngame.addKeyListener({\n  key: 'spacebar',\n  listener: function listener() {\n    // reset counter for bullets\n    // When spacebar comes up\n    // keyUp() uses this function\n    setTimeout(function () {\n      game.gun_Locked = false;\n    }, 200);\n\n    if (self.gameOver) {\n      window.location.reload();\n    }\n\n    if (game.paused && !self.gameOver) {\n      game.togglePaused();\n    }\n  }\n}); // Reset these when the arrow keys come UP\n\ngame.addKeyListener({\n  key: 'left arrow',\n  listener: function listener() {\n    game.player.step_X = 4;\n  }\n});\ngame.addKeyListener({\n  key: 'right arrow',\n  listener: function listener() {\n    game.player.step_X = 4;\n  }\n});\ngame.addKeyListener({\n  key: 'up arrow',\n  listener: function listener() {\n    game.player.step_Y = 4;\n  }\n});\ngame.addKeyListener({\n  key: 'down arrow',\n  listener: function listener() {\n    game.player.step_Y = 4;\n  }\n});\n$('#pausedToast').on('click', function (e) {\n  game.togglePaused();\n});\n$('.newGameButton, .closeHighScoreToast').on('click', function (e) {\n  // ðŸš§ Under construction ðŸš§\n  // console.log('game.start();');\n  // Get the reset() working later\n  // game.reset();\n  // game.start();\n  // window.location.reload(); // inconsistent\n  window.location.href = window.location.origin;\n});\n$('#newGameFromHighScore.newGame').on('click', function (e) {\n  window.location.href = window.location.origin;\n});\n$(window).on('blur', function () {\n  if (!game.gameOver && !game.paused) {\n    game.togglePaused();\n  }\n});\n$(window).on('focus', function () {\n  if (game.paused) {\n    game.togglePaused();\n  }\n}); // Queue Images here\n// Level Background Images\n\ngame.queueImage(\"/images/Space_1_slice.jpg\");\ngame.queueImage(\"/images/Milky_Way.jpg\");\ngame.queueImage(\"/images/Galaxy.jpg\");\ngame.queueImage(\"/images/Space_1.jpg\"); // game.queueImage(\"/images/\");\n\ngame.queueImage(\"/images/Starships/starships_0007_Ex-ving.png\");\ngame.queueImage(\"/images/missle.png\"); //  Queue Alien ships\n\ngame.queueImage(\"/images/Starships/starships_0006_Bow-fighter_Rev.png\");\ngame.queueImage(\"/images/Starships/starships_0004_Ice-Speedster_Rev.png\");\ngame.queueImage(\"/images/Starships/starships_0005_Centenial-Hawk_Rev.png\");\ngame.queueImage(\"/images/Starships/starships_0001_Sun-killer_Rev.png\");\ngame.queueImage(\"/images/enemy-bullet.png\"); // Explosion Images\n\ngame.queueImage(\"/images/img/explode_1.png\");\ngame.queueImage(\"/images/img/explode_2.png\");\ngame.queueImage(\"/images/img/explode_3.png\");\ngame.queueImage(\"/images/img/explode_4.png\");\ngame.queueImage(\"/images/img/explode_5.png\");\ngame.queueImage(\"/images/img/explode_6.png\");\ngame.queueImage(\"/images/img/explode_7.png\");\ngame.queueImage(\"/images/img/explode_8.png\");\ngame.queueImage(\"/images/img/explode_9.png\");\ngame.queueImage(\"/images/img/explode_10.png\");\ngame.queueImage(\"/images/img/explode_11.png\");\ngame.queueImage(\"/images/img/explode_12.png\");\ngame.queueImage(\"/images/img/explode_13.png\");\ngame.queueImage(\"/images/img/explode_14.png\");\ngame.queueImage(\"/images/img/explode_15.png\");\ngame.queueImage(\"/images/img/explode_16.png\"); /////////////////////////////////////////////\n\ninterval = setInterval(function () {\n  var loadingPercentComplete = game.loadImages(); // console.log('loading Percentage Completed: ', loadingPercentComplete);\n\n  if (loadingPercentComplete === 100) {\n    game._DEBUG && console.log(\"loading ... 100% Complete: OK!!!\");\n    clearInterval(interval);\n  } // We MUST Load ALL these Images here\n\n\n  game.backgroundImg = game.getImage(\"/images/Space_1_slice.jpg\");\n  game.playerImg = game.getImage(\"/images/Starships/starships_0007_Ex-ving.png\");\n  game.missleImg = game.getImage(\"/images/missle.png\");\n  game.enemy_bulletImg = game.getImage(\"/images/enemy-bullet.png\"); // Load Alien ships into level obj's\n  // TODO: Load all but first later\n\n  game.levelData[0].invaderImage = game.getImage(\"/images/Starships/starships_0006_Bow-fighter_Rev.png\");\n  game.levelData[1].invaderImage = game.getImage(\"/images/Starships/starships_0004_Ice-Speedster_Rev.png\");\n  game.levelData[2].invaderImage = game.getImage(\"/images/Starships/starships_0005_Centenial-Hawk_Rev.png\");\n  game.levelData[3].invaderImage = game.getImage(\"/images/Starships/starships_0001_Sun-killer_Rev.png\"); // TODO: Load all but first later\n\n  game.levelData[0].backgroundImg = game.getImage(\"/images/Space_1_slice.jpg\");\n  game.levelData[1].backgroundImg = game.getImage(\"/images/Milky_Way.jpg\");\n  game.levelData[2].backgroundImg = game.getImage(\"/images/Galaxy.jpg\");\n  game.levelData[3].backgroundImg = game.getImage(\"/images/Space_1.jpg\"); // Load Explosion Images\n  // These are inline/loop-unrolled for faster loading\n\n  game.tmp1 = game.getImage(\"/images/img/explode_1.png\");\n  game.tmp2 = game.getImage(\"/images/img/explode_2.png\");\n  game.tmp3 = game.getImage(\"/images/img/explode_3.png\");\n  game.tmp4 = game.getImage(\"/images/img/explode_4.png\");\n  game.tmp5 = game.getImage(\"/images/img/explode_5.png\");\n  game.tmp6 = game.getImage(\"/images/img/explode_6.png\");\n  game.tmp7 = game.getImage(\"/images/img/explode_7.png\");\n  game.tmp8 = game.getImage(\"/images/img/explode_8.png\");\n  game.tmp9 = game.getImage(\"/images/img/explode_9.png\");\n  game.tmp10 = game.getImage(\"/images/img/explode_10.png\");\n  game.tmp11 = game.getImage(\"/images/img/explode_11.png\");\n  game.tmp12 = game.getImage(\"/images/img/explode_12.png\");\n  game.tmp13 = game.getImage(\"/images/img/explode_13.png\");\n  game.tmp14 = game.getImage(\"/images/img/explode_14.png\");\n  game.tmp15 = game.getImage(\"/images/img/explode_15.png\");\n  game.tmp16 = game.getImage(\"/images/img/explode_16.png\");\n}, 16); /////////////////////////////////////////////////\n// const loadToastTitle = document.getElementById(\"loadToastTitle\");\n// Hide Canvas\n\n$('#screen').hide(); // click to start game\n\n$('#loadButton').on('click', function (e) {\n  /* Hide HTML using CSS\n   * Classes are used for speed\n   * to reduce page flicker \n   * jQuery for convenience */\n  $('#pausedToast').removeClass('hide');\n  $('#scoreToast').removeClass('hide');\n  $('#progressbar').removeClass('hide');\n  $('#gameOverToast').removeClass('hide');\n  $('#highScoreToast').removeClass('hide'); // detach and cache HTML snippet\n\n  game.loadingToast = $('#loadingToast').detach();\n  game.pausedToast = $('#pausedToast').detach();\n  game.progressbar = $('#progressbar').detach();\n  game.gameOverToast = $('#gameOverToast').detach();\n  game.highScoreToast = $('#highScoreToast').detach();\n  $('#screen').show(); // loadToastTitle.style.display = \"none\";\n  // $('loadToastTitle').hide()\n  // $('#loadToastTitle').css(\"display\", \"none\");\n\n  game.explosionImages.push(game.tmp1, game.tmp2, game.tmp3, game.tmp4, game.tmp5, game.tmp6, game.tmp7, game.tmp8, game.tmp9, game.tmp10, game.tmp11, game.tmp12, game.tmp13, game.tmp14, game.tmp15, game.tmp16); // game.loadLevel(0);\n\n  e.preventDefault(); // Delay start of game to make sure all assets have loaded\n  // TODO change to a promise/callback\n\n  setTimeout(function () {\n    game.start();\n  }, 250);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvc3JjL2dhbWUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvc3JjL2dhbWUuanM/MjQyNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcGFjZV9kZWZlbmRlci5qc1xuXG4vLyBUT0RPOiBCcmVhayBpbnRvIE1vZHVsZXMgTG9uZyB0ZXJtIGdvYWxcbi8vIFRPRE86IEV4dGVuZCBXZWJwYWNrL25wbSBwYWNrYWdlcyB0byBjb3ZlciBhbGwgRVMyMDE1IC0gRVMyMDIxKyBSdWxlc1xuLy8gVE9ETzogRml4IEF1ZGlvIFBsYXkgRXJyb3Ig8J+aqCBcbi8vIFNlZSDwn5GAIGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL3dlYi91cGRhdGVzLzIwMTcvMDYvcGxheS1yZXF1ZXN0LXdhcy1pbnRlcnJ1cHRlZCDwn6SUXG5cbmNvbnNvbGUud2FybihcIkRlZmVuZGVyIFJ1bm5pbmcgLi4uXCIpO1xuXG4gICAgY2xhc3MgR2FtZSB7XG4gICAgY29uc3RydWN0b3IoZ2FtZU5hbWUsIGNhbnZhc0lkKSB7XG4gICAgICAgIGNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNhbnZhc0lkKTtcbiAgICAgICAgY29uc3Qgd2lkdGggPSAkKHdpbmRvdykud2lkdGgoKTtcbiAgICAgICAgY29uc3QgaGVpZ2h0ID0gJCh3aW5kb3cpLmhlaWdodCgpO1xuICAgICAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICAgICAgXG4gICAgICAgIHRoaXMuX0RFQlVHID0gZmFsc2U7ICAvLyBVc2UgdHVybiBvbi9vZmYgY29uc29sZS5sb2cnc1xuICAgICAgICB0aGlzLl9ERUJVRyAmJiBjb25zb2xlLmxvZyhcImdhbWVOYW1lOiBcIiwgZ2FtZU5hbWUpO1xuXG4gICAgICAgIHRoaXMuX0RFQlVHICYmIGNvbnNvbGUubG9nKFwid2lkdGg6IFwiLCB3aWR0aCk7XG4gICAgICAgIHRoaXMuX0RFQlVHICYmIGNvbnNvbGUubG9nKFwiaGVpZ2h0OiBcIiwgaGVpZ2h0KTtcblxuICAgICAgICAvLyBLZWVwIHNjb3JlIHByaXZhdGUgYXMgbXVjaCBhcyB5b3UgY2FuIHdpdGggSmF2YVNjcmlwdFxuICAgICAgICBsZXQgX3Njb3JlID0gMFxuICAgICAgICB0aGlzLmluY3JTY29yZSA9ICgpID0+IHsgX3Njb3JlICs9ICgxMDAgKiAodGhpcy5nZXRMZXZlbCgpICsgMSkpIH07XG4gICAgICAgIHRoaXMuZGVjclNjb3JlID0gKCkgPT4geyBfc2NvcmUgLT0gNSB9O1xuICAgICAgICB0aGlzLmdldFNjb3JlID0gKCkgPT4gX3Njb3JlO1xuICAgICAgICB0aGlzLnJlc2V0U2NvcmU9ICgpID0+IHsgX3Njb3JlID0gMCB9O1xuXG4gICAgICAgIC8vIEtlZXAgbGV2ZWwgcHJpdmF0ZSBhcyBtdWNoIGFzIHlvdSBjYW4gd2l0aCBKYXZhU2NyaXB0XG4gICAgICAgIGxldCBfbGV2ZWwgPSAwO1xuICAgICAgICBcbiAgICAgICAgdGhpcy5pbmNyZW1lbnRMZXZlbCA9ICgpID0+IHtcbiAgICAgICAgICAgIF9sZXZlbCsrO1xuICAgICAgICAgICAgaWYgKF9sZXZlbCA+IHRoaXMubGV2ZWxEYXRhLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICAgICAgICBfbGV2ZWwgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIF9sZXZlbDtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5kZWNyTGV2ZWwgPSAoKSA9PiB7XG4gICAgICAgICAgICBfbGV2ZWwtLTtcbiAgICAgICAgICAgIGlmIChfbGV2ZWwgPCAwKSB7XG4gICAgICAgICAgICAgICAgX2xldmVsID0gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgIH1cbiAgICAgICAgdGhpcy5yZXNldExldmVsID0gKHZhbCkgPT4ge1xuICAgICAgICAgICAgdmFsID0gdmFsID8gdmFsIDogMDtcbiAgICAgICAgICAgICBfbGV2ZWwgPSB2YWw7XG4gICAgICAgICAgICAgcmV0dXJuIF9sZXZlbDtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5nZXRMZXZlbCA9ICgpID0+IF9sZXZlbDtcblxuICAgICAgICBjYW52YXMud2lkdGggPSB3aWR0aDtcbiAgICAgICAgY2FudmFzLmhlaWdodCA9IGhlaWdodDtcblxuICAgICAgICB0aGlzLnNjcmVlbiA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xuICAgICAgICB0aGlzLmdhbWVTaXplID0geyB4OiBjYW52YXMud2lkdGgsIHk6IGNhbnZhcy5oZWlnaHQgfTtcblxuICAgICAgICB0aGlzLmtleUxpc3RlbmVycyA9IFtdO1xuXG4gICAgICAgIHRoaXMuYnVsbGV0Q250ciA9IDI7XG4gICAgICAgIC8vIHRoaXMuc2NvcmUgPSAwO1xuICAgICAgICB0aGlzLmd1bl9Mb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5nYW1lT3ZlciA9IGZhbHNlO1xuICAgICAgICB0aGlzLnBhdXNlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLlBBVVNFRF9USU1FT1VUID0gMTAwO1xuICAgICAgICB0aGlzLkhJR0hfU0NPUkVTX1NVRkZJWCA9ICdfaGlnaFNjb3Jlcyc7XG5cbiAgICAgICAgdGhpcy5pbnZhZGVyRmlyZVJhdGUgPSAwLjk5NTtcbiAgICAgICAgLy8gdGhpcy5sZXZlbCA9IDA7XG4gICAgICAgIHRoaXMuZmxlZXRQYXRyb2xfWCA9IDA7XG4gICAgICAgIHRoaXMubGV2ZWxEYXRhID0gbGV2ZWxEYXRhO1xuXG4gICAgICAgIHRoaXMucGxheWVyID0ge307XG4gICAgICAgIHRoaXMucGxheWVyTGl2ZXNMZWZ0ID0gMztcbiAgICAgICAgdGhpcy5wbGF5ZXJTdGF0dXMgPSAnQUxJVkUnOyAvLyAnQUxJVkUnIHwgJ0RFQUQnXG4gICAgICAgIHRoaXMucmFkYXIgPSBmYWxzZTtcblxuICAgICAgICB0aGlzLmltYWdlTG9hZGluZ1Byb2dyZXNzQ2FsbGJhY2sgPSB7fTtcbiAgICAgICAgdGhpcy5pbWFnZXMgPSB7fTtcbiAgICAgICAgdGhpcy5pbWFnZVVybHMgPSBbXTtcbiAgICAgICAgdGhpcy5pbWFnZXNMb2FkZWQgPSAwO1xuICAgICAgICB0aGlzLmltYWdlc0ZhaWxlZFRvTG9hZCA9IDA7XG4gICAgICAgIHRoaXMuaW1hZ2VzSW5kZXggPSAwO1xuXG4gICAgICAgIC8vIEltYWdlIE1ldGhvZHNcbiAgICAgICAgdGhpcy5nZXRJbWFnZSA9IGdldEltYWdlO1xuICAgICAgICB0aGlzLmltYWdlTG9hZGVkQ2FsbGJhY2sgPSBpbWFnZUxvYWRlZENhbGxiYWNrO1xuICAgICAgICB0aGlzLmltYWdlTG9hZEVycm9yQ2FsbGJhY2sgPSBpbWFnZUxvYWRFcnJvckNhbGxiYWNrO1xuICAgICAgICB0aGlzLmxvYWRJbWFnZSA9IGxvYWRJbWFnZTtcbiAgICAgICAgdGhpcy5sb2FkSW1hZ2VzID0gbG9hZEltYWdlcztcbiAgICAgICAgdGhpcy5xdWV1ZUltYWdlID0gcXVldWVJbWFnZTtcblxuICAgICAgICAvLyBMb2FkIGFuZCBDYWxsIGltYWdlc1xuICAgICAgICB0aGlzLmJhY2tncm91bmRJbWcgPSB7fTtcbiAgICAgICAgdGhpcy5leHBsb3Npb25JbWFnZXMgPSBbXTtcbiAgICAgICAgdGhpcy50b2dnbGVQYXVzZWQgPSB0b2dnbGVQYXVzZWQ7IC8vIGZ1bmN0aW9uXG4gICAgICAgIHRoaXMua2V5Ym9hcmRlciA9IG5ldyBLZXlib2FyZGVyKHRoaXMpO1xuXG4gICAgICAgIC8vIFRvZG8gLS0tIFB1dCB0aGlzIGludG8gYW4gb2JqIHRvIHVzZSBhcyBzb3VuZCA9PiB1cmwgbWFwcGluZ1xuICAgICAgICAvLyBMb2FkIG91ciBzb3VuZHMgaGVyZVxuICAgICAgICBsb2FkU291bmQoXCIvc291bmRzL3JvY2tldC12ZXItMS53YXZcIiwgZnVuY3Rpb24gKHNob290U291bmQpIHtcbiAgICAgICAgICAgIHNlbGYuc2hvb3RTb3VuZCA9IHNob290U291bmQ7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGxvYWRTb3VuZChcIi9zb3VuZHMvZXhwbG9zaW9uLXZlci0zLndhdlwiLCBmdW5jdGlvbiAoZXhwbG9zaW9uU291bmQpIHtcbiAgICAgICAgICAgIHNlbGYuZXhwbG9zaW9uU291bmQgPSBleHBsb3Npb25Tb3VuZDtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgbG9hZFNvdW5kKFwiL3NvdW5kcy9BbGllbl9HdW4tdmVyLTEud2F2XCIsIGZ1bmN0aW9uIChhbGllblNob290U291bmQpIHtcbiAgICAgICAgICAgIHNlbGYuYWxpZW5TaG9vdFNvdW5kID0gYWxpZW5TaG9vdFNvdW5kO1xuXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHNlbGYuYW5pbWF0ZSA9IGZ1bmN0aW9uICh0aW1lKSB7XG5cbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiZGVsdGE6IFwiLCB0aW1lIC0gc2VsZi5sYXN0VGltZSk7XG4gICAgICAgICAgICBzZWxmLmxhc3RUaW1lID0gdGltZTtcblxuICAgICAgICAgICAgaWYgKHRoaXMuZ2FtZU92ZXIpIHtcbiAgICAgICAgICAgICAgICAvLyBzaG93IEdhbWUgT3ZlciBEaWFsb2cgQm94IEhlcmUhIVxuICAgICAgICAgICAgICAgIHRoaXMuZ2FtZU92ZXIgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBnYW1lLm92ZXIoKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9ERUJVRyAmJiBjb25zb2xlLmxvZyhcIioqKioqIGdhbWVPdmVyOiAqKioqKlwiKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChzZWxmLnBhdXNlZCkge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoc2VsZi5hbmltYXRlKTtcbiAgICAgICAgICAgICAgICB9LCB0aGlzLlBBVVNFRF9USU1FT1VUKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc2VsZi51cGRhdGUodGltZSk7XG4gICAgICAgICAgICAgICAgc2VsZi5kcmF3KHNlbGYuc2NyZWVuLCBzZWxmLmdhbWVTaXplKTtcbiAgICAgICAgICAgICAgICBzZWxmLmRyYXdTY29yZUJveCgpO1xuICAgICAgICAgICAgICAgIHNlbGYuZHJhd0xldmVsQm94KCk7XG4gICAgICAgICAgICAgICAgc2VsZi5kcmF3U2hpcHNCb3goKTtcbiAgICAgICAgICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoc2VsZi5hbmltYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc3RhcnQoKSB7XG4gICAgICAgIC8vIFdlIHN0YXJ0IGF0IGxldmVsIDAgb2YgY291cnNlXG4gICAgICAgIHRoaXMubG9hZExldmVsKCk7XG4gICAgICAgIHRoaXMuYW5pbWF0ZSgpO1xuICAgIH1cbiAgICAvLyDwn5qnIFVuZGVyIGNvbnN0cnVjdGlvbiDwn5qnXG4gICAgLyogcmVzZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLmJ1bGxldENudHIgPSAyO1xuICAgICAgICB0aGlzLnNjb3JlID0gMDtcbiAgICAgICAgdGhpcy5ndW5fTG9ja2VkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuZ2FtZU92ZXIgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5wYXVzZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5pbnZhZGVyRmlyZVJhdGUgPSAwLjk5NTtcbiAgICAgICAgdGhpcy5yZXNldExldmVsKDApO1xuICAgICAgICB0aGlzLnJhZGFyID0gZmFsc2U7XG4gICAgICAgIHRoaXMuYnVsbGV0Q250ciA9IDIwO1xuICAgICAgICB0aGlzLmd1bl9Mb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5nYW1lT3ZlciA9IGZhbHNlO1xuICAgICAgICB0aGlzLnBhdXNlZCA9IGZhbHNlO1xuICAgIH0sICovXG4gICAgdXBkYXRlKHRpbWUpIHtcbiAgICAgICAgY29uc3QgYm9kaWVzID0gdGhpcy5ib2RpZXM7XG4gICAgICAgIGNvbnN0IHRlbXBCb2RpZXMgPSBbLi4uYm9kaWVzXTtcblxuICAgICAgICBjb25zdCBpc0NvbGxpZGluZ1dpdGhTb21ldGhpbmcgPSBmdW5jdGlvbiAoYjEpIHtcbiAgICAgICAgICAgIHJldHVybiB0ZW1wQm9kaWVzLmZpbHRlcihmdW5jdGlvbiAoYjIpIHsgcmV0dXJuIGNvbGxpZGluZyhiMSwgYjIpOyB9KS5sZW5ndGggPiAwO1xuICAgICAgICB9O1xuXG4gICAgICAgIGNvbnN0IGZpbHRlcmVkQm9kaWVzID0gdGVtcEJvZGllcy5maWx0ZXIoaXNDb2xsaWRpbmdXaXRoU29tZXRoaW5nKTtcbiAgICAgICAgY29uc3QgaW52YWRlckZpbHRlcmVkQm9kaWVzID0gW107XG4gICAgICAgIGNvbnN0IHBsYXllckZpbHRlcmVkQm9kaWVzID0gW107XG5cbiAgICAgICAgLy8gRmlsdGVyIGZvciBib3RoIHVzaW5nICdmb3IgbG9vcCdcbiAgICAgICAgLy8gVGhpcyBpcyBtdWNoIGZhc3RlciB0aGFuIHRoZSBzbG93ZXIgYXJyYXkgZmlsdGVyIG1ldGhvZFxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZpbHRlcmVkQm9kaWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCB1bmtub3duRmlsdGVyZWRCb2R5ID0gZmlsdGVyZWRCb2RpZXNbaV07XG5cbiAgICAgICAgICAgIGlmICh1bmtub3duRmlsdGVyZWRCb2R5IGluc3RhbmNlb2YgSW52YWRlcikge1xuICAgICAgICAgICAgICAgIGludmFkZXJGaWx0ZXJlZEJvZGllcy5wdXNoKHVua25vd25GaWx0ZXJlZEJvZHkpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodW5rbm93bkZpbHRlcmVkQm9keSBpbnN0YW5jZW9mIFBsYXllcikge1xuICAgICAgICAgICAgICAgIHBsYXllckZpbHRlcmVkQm9kaWVzLnB1c2godW5rbm93bkZpbHRlcmVkQm9keSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGludmFkZXJGaWx0ZXJlZEJvZGllcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGludmFkZXJGaWx0ZXJlZEJvZGllc1tpXS5uYW1lID09PSBcImludmFkZXJcIikge1xuICAgICAgICAgICAgICAgIC8vIHRoaXMuc2NvcmUgKz0gMTAwICogKHRoaXMuZ2V0TGV2ZWwoKSArIDEpO1xuICAgICAgICAgICAgICAgIHRoaXMuaW5jclNjb3JlKCk7XG5cbiAgICAgICAgICAgICAgICBpbnZhZGVyRmlsdGVyZWRCb2RpZXNbaV0ucGFpbnRlciA9IG5ldyBFeHBsb3Npb25TcHJpdGVQYWludGVyKGdhbWUuZXhwbG9zaW9uSW1hZ2VzLCAnSW52YWRlcicpO1xuICAgICAgICAgICAgICAgIGludmFkZXJGaWx0ZXJlZEJvZGllc1tpXS5uYW1lID0gXCJleHBsb3Npb25cIjtcblxuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXhwbG9zaW9uU291bmQubG9hZCgpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmV4cGxvc2lvblNvdW5kLnBsYXkoKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciB3aXRoIGxvYWRpbmcgJiBwbGF5aW5nIHNvdW5kOiAnLCBlcnJvcik7IC8vIHBhc3MgZXhjZXB0aW9uIG9iamVjdCB0byBlcnJvciBoYW5kbGVyXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaW52YWRlckZpbHRlcmVkQm9kaWVzW2ldLnNpemUueCA9IGludmFkZXJGaWx0ZXJlZEJvZGllc1tpXS5zaXplLnggKiAyLjU7XG4gICAgICAgICAgICAgICAgaW52YWRlckZpbHRlcmVkQm9kaWVzW2ldLnNpemUueSA9IGludmFkZXJGaWx0ZXJlZEJvZGllc1tpXS5zaXplLnkgKiAyLjU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBsYXllckZpbHRlcmVkQm9kaWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAocGxheWVyRmlsdGVyZWRCb2RpZXNbaV0ubmFtZSA9PT0gXCJwbGF5ZXJcIikge1xuICAgICAgICAgICAgICAgIC8vIElmIHBsYXllciBpcyBzdGlsbCBhbGl2ZSBzZXQgaGltIHRvIGRlYWQgaGUganVzdCBnb3Qga2lsbGVkIExPTFxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnBsYXllclN0YXR1cyA9PT0gJ0FMSVZFJykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBsYXllclN0YXR1cyA9ICdERUFEJztcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wbGF5ZXJMaXZlc0xlZnQtLTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcGxheWVyRmlsdGVyZWRCb2RpZXNbaV0ubmFtZSA9IFwiZXhwbG9zaW9uXCI7XG4gICAgICAgICAgICAgICAgcGxheWVyRmlsdGVyZWRCb2RpZXNbaV0ucGFpbnRlciA9IG5ldyBFeHBsb3Npb25TcHJpdGVQYWludGVyKGdhbWUuZXhwbG9zaW9uSW1hZ2VzLCAnUGxheWVyJyk7XG5cbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmV4cGxvc2lvblNvdW5kLmxvYWQoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5leHBsb3Npb25Tb3VuZC5wbGF5KCk7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcigpOyAoJ0Vycm9yIHdpdGggbG9hZGluZyAmIHBsYXlpbmcgc291bmQ6ICcsIGVycm9yKTsgLy8gcGFzcyBleGNlcHRpb24gb2JqZWN0IHRvIGVycm9yIGhhbmRsZXJcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBjb25zdCBpbWFnZXNTaXplTXVsdGlwbGllciA9IHRoaXMucGxheWVyTGl2ZXNMZWZ0ID8gMi41IDogNi4wO1xuXG4gICAgICAgICAgICAgICAgcGxheWVyRmlsdGVyZWRCb2RpZXNbaV0uc2l6ZS54ID0gcGxheWVyRmlsdGVyZWRCb2RpZXNbaV0uc2l6ZS54ICogaW1hZ2VzU2l6ZU11bHRpcGxpZXI7XG4gICAgICAgICAgICAgICAgcGxheWVyRmlsdGVyZWRCb2RpZXNbaV0uc2l6ZS55ID0gcGxheWVyRmlsdGVyZWRCb2RpZXNbaV0uc2l6ZS55ICogaW1hZ2VzU2l6ZU11bHRpcGxpZXI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBub3RDb2xsaWRpbmdXaXRoQW55dGhpbmcgPSBmdW5jdGlvbiAoYjEpIHtcbiAgICAgICAgICAgIHJldHVybiBib2RpZXMuZmlsdGVyKGZ1bmN0aW9uIChiMikgeyByZXR1cm4gY29sbGlkaW5nKGIxLCBiMik7IH0pLmxlbmd0aCA9PT0gMDtcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLmJvZGllcyA9IHRoaXMuYm9kaWVzLmZpbHRlcihub3RDb2xsaWRpbmdXaXRoQW55dGhpbmcpO1xuXG4gICAgICAgIC8vIEFyZSBhbGwgSW52YWRlcnMgZGVzdHJveWVkIFxuICAgICAgICBjb25zdCBpbnZhZGVyc0xlZnRBbGl2ZSA9IHRoaXMuYm9kaWVzLmZpbHRlcihmdW5jdGlvbiAodW5rbm93bkJvZHkpIHtcbiAgICAgICAgICAgIHJldHVybiB1bmtub3duQm9keSBpbnN0YW5jZW9mIEludmFkZXI7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChpbnZhZGVyc0xlZnRBbGl2ZS5sZW5ndGggPCA1ICYmIGludmFkZXJzTGVmdEFsaXZlLmxlbmd0aCA+PSAzKSB7XG4gICAgICAgICAgICB0aGlzLmludmFkZXJGaXJlUmF0ZSA9IDAuOTg7XG4gICAgICAgICAgICAvLyBSYWRhciBpcyBvbiBhbmQgc3RheXMgb24gdW50aWwgYWxsIGFsaWVucyBhcmUgZGVhZC5cbiAgICAgICAgICAgIHRoaXMucmFkYXIgPSB0cnVlO1xuICAgICAgICB9IGVsc2UgaWYgKGludmFkZXJzTGVmdEFsaXZlLmxlbmd0aCA8IDMgJiYgaW52YWRlcnNMZWZ0QWxpdmUubGVuZ3RoID49IDIpIHtcbiAgICAgICAgICAgIHRoaXMuaW52YWRlckZpcmVSYXRlID0gMC45NjtcbiAgICAgICAgfSBlbHNlIGlmIChpbnZhZGVyc0xlZnRBbGl2ZS5sZW5ndGggPCAyKSB7XG4gICAgICAgICAgICB0aGlzLmludmFkZXJGaXJlUmF0ZSA9IDAuOTI7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBhbGxGaWx0ZXJlZEJvZGllcyA9IFsuLi5pbnZhZGVyRmlsdGVyZWRCb2RpZXMsIC4uLnBsYXllckZpbHRlcmVkQm9kaWVzXTtcbiAgICAgICAgLy8gQWRkIGJvZGllcyBiYWNrIHdpdGggZXhwbG9zaW9uXG4gICAgICAgIGlmIChhbGxGaWx0ZXJlZEJvZGllcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGFsbEZpbHRlcmVkQm9kaWVzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5ib2RpZXMucHVzaChhbGxGaWx0ZXJlZEJvZGllc1tqXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBSZW1vdmUgYWxsIGJvZGllcyB0aGF0IGFyZSBub3QgdmlzaWJsZSBvbiB0aGUgc2NyZWVuIFxuICAgICAgICB0aGlzLmJvZGllcyA9IHRoaXMuYm9kaWVzLmZpbHRlcihmdW5jdGlvbiAodGhlQm9keSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoZUJvZHkudmlzaWJsZTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5ib2RpZXMgPSB0aGlzLmJvZGllcy5maWx0ZXIoZnVuY3Rpb24gKHRoZUJvZHkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGVCb2R5LnJlbW92ZSA9PT0gZmFsc2U7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmICh0aGlzLnBsYXllckxpdmVzTGVmdCA8IDEpIHtcbiAgICAgICAgICAgIC8vZGVsYXkgZ2FtZSBvdmVyIHRvIGxldCBhbmltYXRpb24gZmluaXNoXG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmdhbWVPdmVyID0gdHJ1ZTtcbiAgICAgICAgICAgIH0sIDc1MCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaW52YWRlcnNMZWZ0QWxpdmUubGVuZ3RoIDw9IDAgJiYgdGhpcy5wbGF5ZXJMaXZlc0xlZnQgPiAwKSB7XG4gICAgICAgICAgICB0aGlzLnBhdXNlZCA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLnBsYXllckxpdmVzTGVmdCA8IDggPyB0aGlzLnBsYXllckxpdmVzTGVmdCsrIDogdGhpcy5wbGF5ZXJMaXZlc0xlZnQ7XG4gICAgICAgICAgICB0aGlzLmluY3JlbWVudExldmVsKCk7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmdhbWUubG9hZExldmVsKCk7XG4gICAgICAgICAgICB9LCAxNTAwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFVwZGF0ZSBQb3NpdGlvblxuICAgICAgICBmb3IgKGxldCBpZHggPSAwOyBpZHggPCB0aGlzLmJvZGllcy5sZW5ndGg7IGlkeCsrKSB7XG4gICAgICAgICAgICB0aGlzLmJvZGllc1tpZHhdLnVwZGF0ZSh0aW1lKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBkcmF3KHNjcmVlbiwgZ2FtZVNpemUpIHtcbiAgICAgICAgc2NyZWVuLmNsZWFyUmVjdCgwLCAwLCBnYW1lU2l6ZS54LCBnYW1lU2l6ZS55KTtcbiAgICAgICAgc2NyZWVuLmRyYXdJbWFnZSh0aGlzLmJhY2tncm91bmRJbWcsIDAsIDAsIGdhbWVTaXplLngsIGdhbWVTaXplLnkpO1xuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5ib2RpZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHRoaXMuYm9kaWVzW2ldLmRyYXcodGhpcy5zY3JlZW4sIHRoaXMuYm9kaWVzW2ldKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBsb2FkTGV2ZWwoKSB7XG4gICAgICAgIGNvbnN0IGxldmVsID0gdGhpcy5nZXRMZXZlbCgpO1xuICAgICAgICB0aGlzLl9ERUJVRyAmJiBjb25zb2xlLmxvZyhgIFxcbiAqKiogTG9hZGluZyBsZXZlbCBOdW1iZXIgJHtsZXZlbH0gKioqYCk7XG4gICAgICAgIGNvbnN0IHsgcm93LCBjb2wsIGJlaGF2aW9yLCBpbnZhZGVySW1hZ2UsXG4gICAgICAgICAgICBzcGVlZFgsIGludmFkZXJGaXJlUmF0ZSwgYmFja2dyb3VuZEltZ1xuICAgICAgICB9ID0gIHRoaXMubGV2ZWxEYXRhW2xldmVsXTtcblxuICAgICAgICB0aGlzLnJhZGFyID0gZmFsc2U7XG4gICAgICAgIHRoaXMuc3BlZWRYX1ZhbCA9IHNwZWVkWDtcbiAgICAgICAgdGhpcy5pbnZhZGVyRmlyZVJhdGUgPSBpbnZhZGVyRmlyZVJhdGU7XG4gICAgICAgIHRoaXMuYmFja2dyb3VuZEltZyA9IGJhY2tncm91bmRJbWc7XG5cbiAgICAgICAgdGhpcy5wbGF5ZXIgPSBuZXcgUGxheWVyKHRoaXMsIFtuZXcgQ3ljbGVJbWFnZXMoMTYsIDMyKV0sXG4gICAgICAgIG5ldyBTcHJpdGVQYWludGVyKFtnYW1lLnBsYXllckltZ10pLCB0aGlzLmdhbWVTaXplKTtcblxuICAgICAgICB0aGlzLmJvZGllcyA9IGNyZWF0ZUludmFkZXJzKHRoaXMsIHRoaXMuZ2FtZVNpemUsIGJlaGF2aW9yLCBpbnZhZGVySW1hZ2UsXG4gICAgICAgICAgICByb3csIGNvbCkuY29uY2F0KHRoaXMucGxheWVyKTtcblxuICAgICAgICAvLyBBZGQgYSBoYWxmIHNlY29uZC1kZWxheSB0byBzbG93XG4gICAgICAgIC8vIHRoZSBwYWNlIG9mIHRoZSBnYW1lIG9uIGEgbGV2ZWwgY2hhbmdlLlxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMucGF1c2VkID0gZmFsc2U7XG4gICAgICAgIH0sIDUwMCk7XG5cbiAgICB9XG5cbiAgICBhZGRLZXlMaXN0ZW5lcihrZXlBbmRMaXN0ZW5lcikge1xuICAgICAgICBnYW1lLmtleUxpc3RlbmVycy5wdXNoKGtleUFuZExpc3RlbmVyKTtcbiAgICB9XG4gICAgZmluZEtleUxpc3RlbmVyKGtleSkge1xuICAgICAgICBsZXQgbGlzdGVuZXI7XG5cbiAgICAgICAgZ2FtZS5rZXlMaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAoa2V5QW5kTGlzdGVuZXIpIHtcbiAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRLZXkgPSBrZXlBbmRMaXN0ZW5lci5rZXk7XG4gICAgICAgICAgICBpZiAoY3VycmVudEtleSA9PT0ga2V5KSB7XG4gICAgICAgICAgICAgICAgbGlzdGVuZXIgPSBrZXlBbmRMaXN0ZW5lci5saXN0ZW5lcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBsaXN0ZW5lcjtcbiAgICB9XG4gICAga2V5UHJlc3NlZChlKSB7XG4gICAgICAgIGxldCBsaXN0ZW5lcjtcbiAgICAgICAga2V5ID0gdW5kZWZpbmVkO1xuXG4gICAgICAgIHN3aXRjaCAoZS5rZXlDb2RlKSB7XG4gICAgICAgICAgICBjYXNlIDY3OiBrZXkgPSAnYyc7IGJyZWFrO1xuICAgICAgICAgICAgY2FzZSA4MDoga2V5ID0gJ3AnOyBicmVhaztcbiAgICAgICAgICAgIGNhc2UgODM6IGtleSA9ICdzJzsgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgICBsaXN0ZW5lciA9IGdhbWUuZmluZEtleUxpc3RlbmVyKGtleSk7XG4gICAgICAgIGlmIChsaXN0ZW5lcikge1xuICAgICAgICAgICAgbGlzdGVuZXIoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBrZXlVcChlKSB7XG4gICAgICAgIGxldCBsaXN0ZW5lcjtcbiAgICAgICAga2V5ID0gdW5kZWZpbmVkO1xuXG4gICAgICAgIHN3aXRjaCAoZS5rZXlDb2RlKSB7XG4gICAgICAgICAgICBjYXNlIDMyOiBrZXkgPSAnc3BhY2ViYXInOyBicmVhaztcbiAgICAgICAgICAgIGNhc2UgMzc6IGtleSA9ICdsZWZ0IGFycm93JzsgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIDM5OiBrZXkgPSAncmlnaHQgYXJyb3cnOyBicmVhaztcbiAgICAgICAgICAgIGNhc2UgMzg6IGtleSA9ICd1cCBhcnJvdyc7IGJyZWFrO1xuICAgICAgICAgICAgY2FzZSA0MDoga2V5ID0gJ2Rvd24gYXJyb3cnOyBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIGxpc3RlbmVyID0gZ2FtZS5maW5kS2V5TGlzdGVuZXIoa2V5KTtcbiAgICAgICAgaWYgKGxpc3RlbmVyKSB7XG4gICAgICAgICAgICBsaXN0ZW5lcigpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFkZEJvZHkoYm9keSkge1xuICAgICAgICB0aGlzLmJvZGllcy5wdXNoKGJvZHkpO1xuICAgIH1cbiAgICBpbnZhZGVyc0JlbG93KGludmFkZXIpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYm9kaWVzLmZpbHRlcihmdW5jdGlvbiAoYikge1xuICAgICAgICAgICAgcmV0dXJuIGIgaW5zdGFuY2VvZiBJbnZhZGVyICYmXG4gICAgICAgICAgICAgICAgYi5jZW50ZXIueSA+IGludmFkZXIuY2VudGVyLnkgJiZcbiAgICAgICAgICAgICAgICBiLmNlbnRlci54IC0gaW52YWRlci5jZW50ZXIueCA8IGludmFkZXIuc2l6ZS54O1xuICAgICAgICB9KS5sZW5ndGggPiAwO1xuICAgIH1cbiAgICBnZXRIaWdoU2NvcmVzKCkge1xuICAgICAgICBsZXQga2V5ID0gZ2FtZS5nYW1lTmFtZSArIGdhbWUuSElHSF9TQ09SRVNfU1VGRklYLCBoaWdoU2NvcmVzU3RyaW5nID0gbG9jYWxTdG9yYWdlW2tleV07XG4gICAgICAgIGlmIChoaWdoU2NvcmVzU3RyaW5nID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZVtrZXldID0gSlNPTi5zdHJpbmdpZnkoW10pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZVtrZXldKTtcbiAgICB9XG4gICAgc2V0SGlnaFNjb3JlKCkge1xuICAgICAgICBsZXQga2V5ID0gZ2FtZU5hbWUgKyBnYW1lLkhJR0hfU0NPUkVTX1NVRkZJWCwgaGlnaFNjb3Jlc1N0cmluZyA9IGxvY2FsU3RvcmFnZTtcblxuICAgICAgICBoaWdoU2NvcmVzLnVuc2hpZnQoaGlnaFNjb3JlKTtcbiAgICAgICAgbG9jYWxTdG9yYWdlW2tleV0gPSBKU09OLnN0cmluZ2lmeShoaWdoU2NvcmVzKTtcbiAgICB9XG4gICAgY2xlYXJIaWdoU2NvcmVzKCkge1xuICAgICAgICBsb2NhbFN0b3JhZ2VbZ2FtZS5nYW1lTmFtZSArIHRoaXMuSElHSF9TQ09SRVNfU1VGRklYXSA9IEpTT04uc3RyaW5naWZ5KFtdKTtcbiAgICB9XG4gICAgb3ZlcigpIHtcbiAgICAgICAgbGV0IGhpZ2hTY29yZSA9IDAsIGhpZ2hTY29yZXMgPSBbeyBzY29yZTogMTAwIH0sIHsgc2NvcmU6IDc1IH0sIHsgc2NvcmU6IDUwIH1dO1xuXG4gICAgICAgIGxldCBsYXN0T25MaXN0ID0gJCgnI2hpZ2hTY29yZUxpc3QgbGknKS5sYXN0KCkudGV4dCgpO1xuXG4gICAgICAgIGlmIChoaWdoU2NvcmVzLmxlbmd0aCA9PT0gMCB8fCBnYW1lLmdldFNjb3JlKCkgPiBoaWdoU2NvcmVzWzBdLnNjb3JlKSB7XG4gICAgICAgICAgICAvLyB0aGlzLnNob3dIaWdoU2NvcmVzKCk7XG4gICAgICAgICAgICBnYW1lLmhpZ2hTY29yZVRvYXN0Lmluc2VydEFmdGVyKCdjYW52YXMnKTtcbiAgICAgICAgICAgIGdhbWUuaGlnaFNjb3JlVG9hc3Quc2hvdygpO1xuICAgICAgICAgICAgJCgnI2hpZ2hTY29yZVBhcmFncmFwaCcpLmh0bWwoZ2FtZS5nZXRTY29yZSgpKTtcblxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZ2FtZS5nYW1lT3ZlclRvYXN0Lmluc2VydEFmdGVyKCdjYW52YXMnKTtcbiAgICAgICAgICAgIGdhbWUuZ2FtZU92ZXJUb2FzdC5zaG93KCk7XG4gICAgICAgICAgICAkKCcjaGlnaFNjb3JlUGFyYWdyYXBoJykuaHRtbChnYW1lLmdldFNjb3JlKCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgJCgnI2lucHV0U2NvcmUnKS52YWwoZ2FtZS5nZXRTY29yZSgpKTtcblxuICAgICAgICAvLyB0aGlzLmdhbWVPdmVyID0gdHJ1ZTtcbiAgICAgICAgLy8gdGhpcy5sYXN0U2NvcmUgPSB0aGlzLnNjb3JlO1xuICAgICAgICAvLyB0aGlzLnNjb3JlID0gMDtcbiAgICB9XG4gICAgLy8gSGlnaCBTY29yZXMgLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uXG4gICAgc2hvd0hpZ2hTY29yZXMoKSB7XG4gICAgICAgICQoXCIjaGlnaFNjb3JlUGFyYWdyYXBoXCIpLnNob3coKTtcbiAgICAgICAgJChcIiNoaWdoU2NvcmVQYXJhZ3JhcGhcIikudGV4dCh0aGlzLmdldFNjb3JlKCkpO1xuICAgICAgICAkKFwiI2hpZ2hTY29yZVRvYXN0XCIpLnRleHQodGhpcy5nZXRTY29yZSgpKTtcbiAgICAgICAgdGhpcy51cGRhdGVIaWdoU2NvcmVMaXN0KCk7XG4gICAgfVxuICAgIHVwZGF0ZUhpZ2hTY29yZUxpc3QoKSB7XG4gICAgICAgIGxldCBlbCwgaGlnaFNjb3JlcyA9IGdhbWUuZ2V0SGlnaFNjb3JlcygpLCBsZW5ndGggPSBoaWdoU2NvcmVzLmxlbmd0aCwgaGlnaFNjb3JlLCBsaXN0UGFyZW50ID0gaGlnaFNjb3JlTGlzdC5wYXJlbnROb2RlO1xuXG4gICAgfVxuICAgIGRyYXdTY29yZUJveCgpIHtcbiAgICAgICAgbGV0IHRleHQgPSAnU0NPUkU6ICcgKyB0aGlzLmdldFNjb3JlKCk7XG4gICAgICAgIHRoaXMuc2NyZWVuLmZpbGxUZXh0KHRleHQsIHRoaXMuZ2FtZVNpemUueCAqIDAuMDc1LCB0aGlzLmdhbWVTaXplLnkgKiAwLjA1MCk7XG4gICAgICAgIHRoaXMuc2NyZWVuLmZpbGxTdHlsZSA9ICd3aGl0ZSc7XG4gICAgICAgIGxldCBmb250SGVpZ2h0ID0gdGhpcy5nYW1lU2l6ZS55ICogMC4wMzc1O1xuICAgICAgICB0aGlzLnNjcmVlbi5mb250ID0gZm9udEhlaWdodCArIFwicHggSGVsdmV0aWNhXCI7XG4gICAgICAgIHRoaXMuc2NyZWVuLnRleHRBbGlnbiA9ICdsZWZ0JztcbiAgICAgICAgdGhpcy5zY3JlZW4udGV4dEJhc2VsaW5lID0gJ3RvcCc7XG4gICAgfVxuICAgIGRyYXdMZXZlbEJveCgpIHtcbiAgICAgICAgY29uc3QgcGxheWVyTGV2ZWwgPSB0aGlzLmdldExldmVsKCkgKyAxO1xuICAgICAgICBsZXQgdGV4dCA9ICdMZXZlbDogJyArIHBsYXllckxldmVsO1xuICAgICAgICB0aGlzLnNjcmVlbi5maWxsVGV4dCh0ZXh0LCB0aGlzLmdhbWVTaXplLnggKiAwLjQ5LCB0aGlzLmdhbWVTaXplLnkgKiAwLjA1MCk7XG4gICAgICAgIHRoaXMuc2NyZWVuLmZpbGxTdHlsZSA9ICd3aGl0ZSc7XG4gICAgICAgIGxldCBmb250SGVpZ2h0ID0gdGhpcy5nYW1lU2l6ZS55ICogMC4wMzc1O1xuICAgICAgICB0aGlzLnNjcmVlbi5mb250ID0gZm9udEhlaWdodCArIFwicHggSGVsdmV0aWNhXCI7XG4gICAgICAgIHRoaXMuc2NyZWVuLnRleHRBbGlnbiA9ICdsZWZ0JztcbiAgICAgICAgdGhpcy5zY3JlZW4udGV4dEJhc2VsaW5lID0gJ3RvcCc7XG4gICAgfVxuICAgIGRyYXdTaGlwc0JveCgpIHtcbiAgICAgICAgbGV0IHRleHQgPSBgU2hpcHM6ICR7dGhpcy5wbGF5ZXJMaXZlc0xlZnR9YDtcbiAgICAgICAgdGhpcy5zY3JlZW4uZmlsbFRleHQodGV4dCwgdGhpcy5nYW1lU2l6ZS54ICogMC44NTAsIHRoaXMuZ2FtZVNpemUueSAqIDAuMDUwKTtcbiAgICAgICAgdGhpcy5zY3JlZW4uZmlsbFN0eWxlID0gJ3doaXRlJztcbiAgICAgICAgbGV0IGZvbnRIZWlnaHQgPSB0aGlzLmdhbWVTaXplLnkgKiAwLjAzNzU7XG4gICAgICAgIHRoaXMuc2NyZWVuLmZvbnQgPSBmb250SGVpZ2h0ICsgXCJweCBIZWx2ZXRpY2FcIjtcbiAgICAgICAgdGhpcy5zY3JlZW4udGV4dEFsaWduID0gJ2xlZnQnO1xuICAgICAgICB0aGlzLnNjcmVlbi50ZXh0QmFzZWxpbmUgPSAndG9wJztcbiAgICB9XG59IC8vIGVuZCBvZiBHYW1lIGNvbnN0cnVjdG9yXG5cbmNvbnN0IGltYWdlTG9hZGVkQ2FsbGJhY2sgPSAgZnVuY3Rpb24oZSkge1xuICAgICAgICB0aGlzLmltYWdlc0xvYWRlZCsrO1xuICAgIH07XG5cbmNvbnN0IGltYWdlTG9hZEVycm9yQ2FsbGJhY2sgPSBmdW5jdGlvbihlKXtcbiAgICAgICAgdGhpcy5pbWFnZXNGYWlsZWRUb0xvYWQrKztcbiAgICB9O1xuXG5jb25zdCBsb2FkSW1hZ2UgPSBmdW5jdGlvbihpbWFnZVVybCkge1xuICAgICAgICBsZXQgaW1hZ2UgPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgY29uc3Qgc2VsZiA9IHRoaXM7XG5cbiAgICAgICAgaW1hZ2Uuc3JjID0gaW1hZ2VVcmw7XG5cbiAgICAgICAgaW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIHNlbGYuaW1hZ2VMb2FkZWRDYWxsYmFjayhlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICBpbWFnZS5hZGRFdmVudExpc3RlbmVyKCdlcnJvcicsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIHNlbGYuaW1hZ2VMb2FkRXJyb3JDYWxsYmFjayhlKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5pbWFnZXNbaW1hZ2VVcmxdID0gaW1hZ2U7ICAgICAgXG4gICAgfTtcblxuY29uc3QgbG9hZEltYWdlcyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAodGhpcy5pbWFnZXNJbmRleCA8IHRoaXMuaW1hZ2VVcmxzLmxlbmd0aCl7XG4gICAgICAgICAgICB0aGlzLmxvYWRJbWFnZSh0aGlzLmltYWdlVXJsc1t0aGlzLmltYWdlc0luZGV4XSk7XG4gICAgICAgICAgICB0aGlzLmltYWdlc0luZGV4Kys7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gKCh0aGlzLmltYWdlc0xvYWRlZCArIHRoaXMuaW1hZ2VzRmFpbGVkVG9Mb2FkKSAvIFxuICAgICAgICAgICAgdGhpcy5pbWFnZVVybHMubGVuZ3RoKSAqIDEwMDtcbn07XG5cbiAgICAvLyBDYWxsIHRvIGFkZCBpbWFnZSB0byBxdWV1ZVxuY29uc3QgcXVldWVJbWFnZSA9IGZ1bmN0aW9uKGltYWdlVXJsKSB7XG4gICAgICAgIHRoaXMuaW1hZ2VVcmxzLnB1c2goaW1hZ2VVcmwpO1xufTtcblxuY29uc3QgZ2V0SW1hZ2UgPSBmdW5jdGlvbihpbWFnZVVybCkge1xuICAgICAgICByZXR1cm4gIHRoaXMuaW1hZ2VzW2ltYWdlVXJsXTtcbn07XG4gICAgXG5jbGFzcyBQbGF5ZXIge1xuICAgIGNvbnN0cnVjdG9yKGdhbWUsIGJlaGF2aW9yLCBwYWludGVyLCBnYW1lU2l6ZSkge1xuICAgICAgICB0aGlzLm5hbWUgPSBcInBsYXllclwiO1xuICAgICAgICB0aGlzLmdhbWVTaXplID0gZ2FtZVNpemU7XG4gICAgICAgIHRoaXMuYmVoYXZpb3IgPSBiZWhhdmlvcjtcbiAgICAgICAgdGhpcy5wYWludGVyID0gcGFpbnRlcjtcbiAgICAgICAgdGhpcy5nYW1lID0gZ2FtZTtcbiAgICAgICAgdGhpcy5zdGVwX1ggPSA0O1xuICAgICAgICB0aGlzLnN0ZXBfWSA9IDQ7XG4gICAgICAgIHRoaXMuZHggPSB0aGlzLmR5ID0gMS4wMTU7XG4gICAgICAgIHRoaXMuYW5pbWF0aW5nID0gZmFsc2U7XG4gICAgICAgIHRoaXMucmVtb3ZlID0gZmFsc2U7XG4gICAgICAgIHRoaXMudmlzaWJsZSA9IHRydWU7XG4gICAgICAgIHRoaXMucmFkYXIgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zaXplID0gZ2V0U3ByaXRlU2l6ZSgncGxheWVyJywgdGhpcy5nYW1lU2l6ZSk7XG4gICAgICAgIHRoaXMuY2VudGVyID0geyB4OiBnYW1lU2l6ZS54IC8gMiwgeTogZ2FtZVNpemUueSAtIDEuMCAqIHRoaXMuc2l6ZS55IH07XG5cbiAgICB9XG4gICAgdXBkYXRlKHRpbWUpIHtcblxuICAgICAgICAvL0xvb3AgdGhyb3VnaCBhbGwgYmVoYXZpb3JzXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5iZWhhdmlvci5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdGhpcy5iZWhhdmlvcltpXS5leGVjdXRlKHRoaXMsIHRoaXMuZ2FtZVNpemUsIHRpbWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMuZ2FtZS5rZXlib2FyZGVyLmlzRG93bih0aGlzLmdhbWUua2V5Ym9hcmRlci5LRVlTLkxFRlQpKSB7XG4gICAgICAgICAgICB0aGlzLnN0ZXBfWCAqPSB0aGlzLmR4O1xuICAgICAgICAgICAgdGhpcy5zdGVwX1ggPSB0aGlzLnN0ZXBfWCA+IDggPyA4IDogdGhpcy5zdGVwX1g7XG4gICAgICAgICAgICB0aGlzLmNlbnRlci54ID0gdGhpcy5jZW50ZXIueCA8ICgwIC0gdGhpcy5zaXplLnggLyAyKSA/IHRoaXMuZ2FtZS5nYW1lU2l6ZS54IDogdGhpcy5jZW50ZXIueDtcbiAgICAgICAgICAgIHRoaXMuY2VudGVyLnggLT0gdGhpcy5zdGVwX1g7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuZ2FtZS5rZXlib2FyZGVyLmlzRG93bih0aGlzLmdhbWUua2V5Ym9hcmRlci5LRVlTLlJJR0hUKSkge1xuICAgICAgICAgICAgdGhpcy5zdGVwX1ggKj0gdGhpcy5keDtcbiAgICAgICAgICAgIHRoaXMuc3RlcF9YID0gdGhpcy5zdGVwX1ggPiA4ID8gOCA6IHRoaXMuc3RlcF9YO1xuICAgICAgICAgICAgdGhpcy5jZW50ZXIueCA9IHRoaXMuY2VudGVyLnggPiAodGhpcy5nYW1lLmdhbWVTaXplLnggKyB0aGlzLnNpemUueCAvIDIpID8gMCA6IHRoaXMuY2VudGVyLng7XG4gICAgICAgICAgICB0aGlzLmNlbnRlci54ICs9IHRoaXMuc3RlcF9YO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmdhbWUua2V5Ym9hcmRlci5pc0Rvd24odGhpcy5nYW1lLmtleWJvYXJkZXIuS0VZUy5VUCkpIHtcbiAgICAgICAgICAgIHRoaXMuc3RlcF9ZICo9IHRoaXMuZHk7XG4gICAgICAgICAgICB0aGlzLnN0ZXBfWSA9IHRoaXMuc3RlcF9ZID4gOCA/IDggOiB0aGlzLnN0ZXBfWTtcbiAgICAgICAgICAgIHRoaXMuY2VudGVyLnkgPSB0aGlzLmNlbnRlci55ID4gKHRoaXMuZ2FtZS5nYW1lU2l6ZS55ICsgdGhpcy5zaXplLnkgLyAyKSA/IDAgOiB0aGlzLmNlbnRlci55O1xuICAgICAgICAgICAgdGhpcy5jZW50ZXIueSArPSB0aGlzLnN0ZXBfWTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5nYW1lLmtleWJvYXJkZXIuaXNEb3duKHRoaXMuZ2FtZS5rZXlib2FyZGVyLktFWVMuRE9XTikpIHtcbiAgICAgICAgICAgIHRoaXMuc3RlcF9ZICo9IHRoaXMuZHk7XG4gICAgICAgICAgICB0aGlzLnN0ZXBfWSA9IHRoaXMuc3RlcF9ZID4gOCA/IDggOiB0aGlzLnN0ZXBfWTtcbiAgICAgICAgICAgIHRoaXMuY2VudGVyLnkgPSB0aGlzLmNlbnRlci55IDwgKDAgLSB0aGlzLnNpemUueSAvIDIpID8gdGhpcy5nYW1lLmdhbWVTaXplLnkgOiB0aGlzLmNlbnRlci55O1xuICAgICAgICAgICAgdGhpcy5jZW50ZXIueSAtPSB0aGlzLnN0ZXBfWTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5nYW1lLmtleWJvYXJkZXIuaXNEb3duKHRoaXMuZ2FtZS5rZXlib2FyZGVyLktFWVMuU1BBQ0UpICYmXG4gICAgICAgICAgICAhdGhpcy5nYW1lLmd1bl9Mb2NrZWQpIHtcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5idWxsZXRDbnRyLS07XG4gICAgICAgICAgICB0aGlzLmdhbWUuZ3VuX0xvY2tlZCA9IHRoaXMuZ2FtZS5idWxsZXRDbnRyIDw9IDAgPyB0cnVlIDogZmFsc2U7XG5cbiAgICAgICAgICAgIGxldCBtaXNzbGUgPSBuZXcgTWlzc2xlKHtcbiAgICAgICAgICAgICAgICB4OiB0aGlzLmNlbnRlci54LCB5OiB0aGlzLmNlbnRlci55IC1cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaXplLnkgLyAyXG4gICAgICAgICAgICB9LCB7IHg6IDAsIHk6IC10aGlzLmdhbWVTaXplLnkgKiAwLjAxNTAgfSxcbiAgICAgICAgICAgICAgICB0aGlzLmdhbWVTaXplKTtcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5kZWNyU2NvcmUoKTtcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5hZGRCb2R5KG1pc3NsZSk7XG5cblxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICB0aGlzLmdhbWUuc2hvb3RTb3VuZC5sb2FkKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5nYW1lLnNob290U291bmQucGxheSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgbG9hZGluZyBzb3VuZDogJywgZXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGRyYXcoc2NyZWVuLCBib2R5KSB7XG4gICAgICAgIHRoaXMucGFpbnRlci5kcmF3KHNjcmVlbiwgYm9keSk7XG4gICAgfVxufVxuXG5cbmNsYXNzIEludmFkZXIge1xuICAgIGNvbnN0cnVjdG9yKGdhbWUsIGNlbnRlciwgYmVoYXZpb3IsIHBhaW50ZXIsIGdhbWVTaXplKSB7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiaW52YWRlclwiO1xuICAgICAgICB0aGlzLmdhbWUgPSBnYW1lO1xuICAgICAgICB0aGlzLmdhbWVTaXplID0gZ2FtZVNpemU7XG4gICAgICAgIHRoaXMuYmVoYXZpb3IgPSBiZWhhdmlvcjtcbiAgICAgICAgdGhpcy5wYWludGVyID0gcGFpbnRlcjtcblxuICAgICAgICB0aGlzLnZpc2libGUgPSB0cnVlO1xuICAgICAgICB0aGlzLmFuaW1hdGluZyA9IGZhbHNlO1xuICAgICAgICB0aGlzLnJlbW92ZSA9IGZhbHNlO1xuICAgICAgICAvLyB0aGlzLmdhbWUucmFkYXIgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zaXplID0gZ2V0U3ByaXRlU2l6ZSgnaW52YWRlcicsIHRoaXMuZ2FtZVNpemUpO1xuXG4gICAgICAgIHRoaXMuY2VudGVyID0gY2VudGVyO1xuICAgICAgICB0aGlzLnJhZGlhbnMgPSAwLjAyNTtcbiAgICAgICAgdGhpcy50b3RhbFJhZGlhbnMgPSAwO1xuICAgICAgICB0aGlzLnNjYWxlSGVpZ2h0ID0gMS41O1xuICAgICAgICB0aGlzLnBhdHJvbFggPSAwO1xuXG4gICAgICAgIHRoaXMuc3BlZWRYID0gZ2FtZVNpemUueCAqIHRoaXMuZ2FtZS5zcGVlZFhfVmFsO1xuICAgIH1cbiAgICB1cGRhdGUodGltZSkge1xuXG4gICAgICAgIGxldCB0YXJnZXRMb2NhdGlvbiA9IHt9O1xuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5iZWhhdmlvci5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdGhpcy5iZWhhdmlvcltpXS5leGVjdXRlKHRoaXMsIHRoaXMuZ2FtZVNpemUsIHRpbWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy52aXNpYmxlID0gdGhpcy5jZW50ZXIueSA+IHRoaXMuZ2FtZVNpemUueSAqIDEuMTAgPyBmYWxzZSA6IHRydWU7XG5cbiAgICAgICAgaWYgKE1hdGgucmFuZG9tKCkgPiB0aGlzLmdhbWUuaW52YWRlckZpcmVSYXRlICYmXG4gICAgICAgICAgICAhdGhpcy5nYW1lLmludmFkZXJzQmVsb3codGhpcykpIHtcblxuXG4gICAgICAgICAgICBpZiAodGhpcy5nYW1lLnJhZGFyID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgdGFyZ2V0TG9jYXRpb24gPSByYWRhckd1aWRhbmNlKHRoaXMuZ2FtZS5wbGF5ZXIsXG4gICAgICAgICAgICAgICAgICAgIHRoaXMsIHRoaXMuZ2FtZVNpemUueSAqIDAuMDA3NSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRhcmdldExvY2F0aW9uID0geyB4OiAwLCB5OiB0aGlzLmdhbWVTaXplLnkgKiAwLjAwNzUgfTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgbGV0IGJ1bGxldCA9IG5ldyBCdWxsZXQoe1xuICAgICAgICAgICAgICAgIHg6IHRoaXMuY2VudGVyLngsIHk6IHRoaXMuY2VudGVyLnkgK1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNpemUueCAvIDJcbiAgICAgICAgICAgIH0sIHRhcmdldExvY2F0aW9uLFxuICAgICAgICAgICAgICAgIHRoaXMuZ2FtZVNpemUpO1xuICAgICAgICAgICAgdGhpcy5nYW1lLmFkZEJvZHkoYnVsbGV0KTtcblxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICB0aGlzLmdhbWUuYWxpZW5TaG9vdFNvdW5kLmxvYWQoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmdhbWUuYWxpZW5TaG9vdFNvdW5kLnBsYXkoKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgYWRkaW5nIGFsaWVuU2hvb3RTb3VuZDogJywgZXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGRyYXcoc2NyZWVuLCBib2R5KSB7XG4gICAgICAgIHRoaXMucGFpbnRlci5kcmF3KHNjcmVlbiwgYm9keSk7XG4gICAgfVxufVxuXG5cbmNvbnN0IGNyZWF0ZUludmFkZXJzID0gZnVuY3Rpb24oZ2FtZSwgZ2FtZVNpemUsIGJlaGF2aW9yLCBpbnZhZGVySW1hZ2UsIHJvdywgY29sKSB7XG4gICAgdGhpcy5nYW1lID0gZ2FtZTtcbiAgICBsZXQgaW52YWRlcnMgPSBbXSxcbiAgICAgICAgZmxlZXRXaWR0aCA9IDAsXG4gICAgICAgIHNpemUgPSB7fTtcblxuICAgIHNpemUgPSBnZXRTcHJpdGVTaXplKCdpbnZhZGVyJywgZ2FtZVNpemUpO1xuICAgIGZsZWV0V2lkdGggPSAyICogY29sICogc2l6ZS54O1xuXG4gICAgdGhpcy5nYW1lLmZsZWV0UGF0cm9sX1ggPSAoKGdhbWVTaXplLnggLSBmbGVldFdpZHRoKSAvIDIpO1xuXG4gICAgLy8gY29uc29sZS5sb2coXCJ0aGlzLmdhbWUuZmxlZXRQYXRyb2xfWDogXCIsdGhpcy5nYW1lLmZsZWV0UGF0cm9sX1gpO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAocm93ICogY29sKTsgaSsrKSB7XG5cbiAgICAgICAgbGV0IHggPSAodGhpcy5nYW1lLmZsZWV0UGF0cm9sX1gpICsgKGkgJSBjb2wpICogKGdhbWVTaXplLnggKiAwLjA3NSk7XG4gICAgICAgIGxldCB5ID0gKGdhbWVTaXplLnkgKiAwLjA3NSkgKyAoaSAlIHJvdykgKiAoZ2FtZVNpemUueSAqIDAuMDc1KTtcblxuICAgICAgICBpbnZhZGVycy5wdXNoKG5ldyBJbnZhZGVyKGdhbWUsIHsgeDogeCwgeTogeSB9LCBbYmVoYXZpb3IsIFxuICAgICAgICAgICAgbmV3IEN5Y2xlSW1hZ2VzKDE2LCAzMildLCBuZXcgU3ByaXRlUGFpbnRlcihbaW52YWRlckltYWdlXSksIGdhbWVTaXplKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGludmFkZXJzO1xufTtcblxuY29uc3QgZ2V0U3ByaXRlU2l6ZSA9IGZ1bmN0aW9uKHNwcml0ZU5hbWUsIGdhbWVTaXplKXtcbiAgICBsZXQgc2l6ZSA9IHt9OyAgLy8gbm90IGNvbnN0XG5cbiAgICAvLyBUT0RPOiBDbGVhbiB0aGlzIHVwIGFuZCBmaWd1cmUgb3V0IHdoYXQga2luZCBvYSBzY3JlZW4gdGhlIHVzZXIgaGFzIG9wZW5cbiAgICAvLyA0OjMgMTY6OSA6IDIxOjkgZXRjLiBhbmQgc2NhbGUgdGhlIGltYWdlcyBmcm9tIHRoZXJlLlxuICAgIGlmIChzcHJpdGVOYW1lID09PSAncGxheWVyJykge1xuICAgICAgICBpZiAoZ2FtZVNpemUueCA+IDE0MDApIHtcbiAgICAgICAgICAgIHNpemUgPSB7IHg6IGdhbWVTaXplLnggKiAwLjA1MCwgeTogZ2FtZVNpemUueCAqIDAuMDc1MCB9OyBcbiAgICAgICAgfSBlbHNlIGlmIChnYW1lU2l6ZS54ID4gMTAyNCkge1xuICAgICAgICAgICAgc2l6ZSA9IHsgeDogZ2FtZVNpemUueCAqIDAuMDYwLCB5OiBnYW1lU2l6ZS54ICogMC4wOTAgfTsgXG4gICAgICAgIH0gZWxzZSBpZiAoZ2FtZVNpemUueCA+IDc2OCl7XG4gICAgICAgICAgICBzaXplID0geyB4OiBnYW1lU2l6ZS54ICogMC4wNzUsIHk6IGdhbWVTaXplLnggKiAwLjExMjUgfTsgXG4gICAgICAgIH0gZWxzZSBpZiAoZ2FtZVNpemUueCA+IDQwMSkge1xuICAgICAgICAgICAgc2l6ZSA9IHsgeDogZ2FtZVNpemUueCAqIDAuMTAwLCB5OiBnYW1lU2l6ZS54ICogMC4xNTAgfTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHNpemUgPSB7IHg6IDIwLCB5OiAyMCB9OyAvLyB4OiAxNSwgeTogMTVcbiAgICAgICAgfVxuICAgIH0gZWxzZSBpZiAoc3ByaXRlTmFtZSA9PT0gJ2ludmFkZXInKSB7XG4gICAgICAgIGlmIChnYW1lU2l6ZS54ID4gMTQwMCkge1xuICAgICAgICAgICAgc2l6ZSA9IHsgeDogZ2FtZVNpemUueCAqIDAuMDMyNSwgeTogZ2FtZVNpemUueCAqIDAuMDMyNSB9OyBcbiAgICAgICAgfSBlbHNlIGlmIChnYW1lU2l6ZS54ID4gMTAyNCkge1xuICAgICAgICAgICAgc2l6ZSA9IHsgeDogZ2FtZVNpemUueCAqIDAuMDM3NSwgeTogZ2FtZVNpemUueCAqIDAuMDM3NSB9OyBcbiAgICAgICAgfSBlbHNlIGlmIChnYW1lU2l6ZS54ID4gNzY4KXtcbiAgICAgICAgICAgIHNpemUgPSB7IHg6IGdhbWVTaXplLnggKiAwLjA0MjUsIHk6IGdhbWVTaXplLnggKiAwLjA0MjUgfTsgXG4gICAgICAgIH0gZWxzZSBpZiAoZ2FtZVNpemUueCA+IDQwMSkge1xuICAgICAgICAgICAgc2l6ZSA9IHsgeDogZ2FtZVNpemUueCAqIDAuMDUyNSwgeTogZ2FtZVNpemUueCAqIDAuMDUyNSB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgc2l6ZSA9IHsgeDogMjAsIHk6IDIwIH07IC8vIHg6IDE1LCB5OiAxNVxuICAgICAgICB9XG4gICAgfSBlbHNlIGlmIChzcHJpdGVOYW1lID09PSAnbWlzc2xlJykge1xuXG4gICAgICAgIGlmIChnYW1lU2l6ZS54ID4gMTAyNCkge1xuICAgICAgICAgICAgc2l6ZSA9IHsgeDogMTUsIHk6IDI1IH07IFxuICAgICAgICB9IGVsc2UgaWYgKGdhbWVTaXplLnggPiA3Njgpe1xuICAgICAgICAgICAgc2l6ZSA9IHsgeDogMTAsIHk6IDE2IH07IFxuICAgICAgICB9IGVsc2UgaWYgKGdhbWVTaXplLnggPiA0MDEpIHtcbiAgICAgICAgICAgIHNpemUgPSB7IHg6IDYsIHk6IDEwIH07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzaXplID0geyB4OiA0LCB5OiA3IH07IC8vIHg6IDE1LCB5OiAxNVxuICAgICAgICB9XG4gICAgfWVsc2UgaWYgKHNwcml0ZU5hbWUgPT09ICdidWxsZXQnKSB7XG5cbiAgICAgICAgaWYgKGdhbWVTaXplLnggPiAxMDI0KSB7XG4gICAgICAgICAgICBzaXplID0geyB4OiAxNSwgeTogMTUgfTsgXG4gICAgICAgIH0gZWxzZSBpZiAoZ2FtZVNpemUueCA+IDc2OCl7XG4gICAgICAgICAgICBzaXplID0geyB4OiAxMiwgeTogMTIgfTsgXG4gICAgICAgIH0gZWxzZSBpZiAoZ2FtZVNpemUueCA+IDQwMSkge1xuICAgICAgICAgICAgc2l6ZSA9IHsgeDogOCwgeTogOCB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgc2l6ZSA9IHsgeDogNCwgeTogNCB9OyAvLyB4OiAxNSwgeTogMTVcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gc2l6ZTtcbn07XG5cbi8vIE1vdmVtZW50cyB0aGUgYWxpZW5zIHRha2VcbmNvbnN0IHJpZ2h0VG9MZWZ0ID0ge1xuXG4gICAgZXhlY3V0ZTogZnVuY3Rpb24oYm9keSwgZ2FtZVNpemUpIHtcblxuICAgICAgICBpZiAoYm9keS5wYXRyb2xYIDwgLWJvZHkuZ2FtZS5mbGVldFBhdHJvbF9YIHx8IGJvZHkucGF0cm9sWCA+IChib2R5LmdhbWUuZmxlZXRQYXRyb2xfWCkpIHtcbiAgICAgICAgICAgIGJvZHkuc3BlZWRYID0gLWJvZHkuc3BlZWRYO1xuICAgICAgICAgICAgLy8gRHJvcHMgZG93biBhZnRlciBldmVyeSBwYXRyb2xcbiAgICAgICAgICAgIGJvZHkuY2VudGVyLnkgKz0gYm9keS5zaXplLnkgKiAyLjU7XG4gICAgICAgICAgICAvLyBib2R5LnNwZWVkWCArPSBib2R5LnNwZWVkWDtcbiAgICAgICAgfVxuICAgICAgICBib2R5LmNlbnRlci54ICs9IGJvZHkuc3BlZWRYO1xuICAgICAgICBib2R5LnBhdHJvbFggKz0gYm9keS5zcGVlZFg7XG5cbiAgICB9XG59O1xuXG4vLyBBbGllbnMgd2lsbCBmb2xsb3cgYSAgc2luZXdhdmUgb3Igc25ha2UgcGF0dGVybnAgIFxuY29uc3Qgc2luZVdhdmUgPSB7XG5cbiAgICBleGVjdXRlOiBmdW5jdGlvbihib2R5LCBnYW1lU2l6ZSkge1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhcIkluIHNpbmVXYXZlIGV4ZWN1dGUncyB0aGlzOiAlalwiLCBib2R5KVxuXG4gICAgICAgIGlmIChib2R5LnBhdHJvbFggPCAtYm9keS5nYW1lLmZsZWV0UGF0cm9sX1ggfHwgYm9keS5wYXRyb2xYID4gKGJvZHkuZ2FtZS5mbGVldFBhdHJvbF9YKSkge1xuICAgICAgICAgICAgYm9keS5zcGVlZFggPSAtYm9keS5zcGVlZFg7XG4gICAgICAgICAgICBib2R5LnJhZGlhbnMgPSAtYm9keS5yYWRpYW5zO1xuXG4gICAgICAgICAgICAvLyBEcm9wcyBkb3duIGFmdGVyIGV2ZXJ5IHBhdHJvbFxuICAgICAgICAgICAgYm9keS5jZW50ZXIueSArPSBib2R5LnNpemUueTtcbiAgICAgICAgICAgIC8vIGJvZHkuc3BlZWRYICs9IGJvZHkuc3BlZWRYO1xuICAgICAgICB9XG5cbiAgICAgICAgYm9keS50b3RhbFJhZGlhbnMgKz0gYm9keS5yYWRpYW5zO1xuICAgICAgICBib2R5LmNlbnRlci54ICs9IGJvZHkuc3BlZWRYO1xuICAgICAgICBib2R5LnBhdHJvbFggKz0gYm9keS5zcGVlZFg7XG4gICAgICAgIGJvZHkuY2VudGVyLnkgKz0gYm9keS5zY2FsZUhlaWdodCAqIE1hdGguc2luKGJvZHkudG90YWxSYWRpYW5zKTtcblxuICAgIH1cbn07XG5cbmNvbnN0IGhhbGZDaXJjbGUgPSB7XG5cbiAgICBleGVjdXRlOiBmdW5jdGlvbihib2R5LCBnYW1lU2l6ZSkge1xuXG4gICAgICAgIGlmIChib2R5LnBhdHJvbFggPCAtYm9keS5nYW1lLmZsZWV0UGF0cm9sX1ggfHwgYm9keS5wYXRyb2xYID4gKGJvZHkuZ2FtZS5mbGVldFBhdHJvbF9YKSkge1xuICAgICAgICAgICAgYm9keS5zcGVlZFggPSAtYm9keS5zcGVlZFg7XG4gICAgICAgICAgICAvLyBib2R5LnJhZGlhbnMgPSAtYm9keS5yYWRpYW5zO1xuXG4gICAgICAgICAgICAvLyBEcm9wcyBkb3duIGFmdGVyIGV2ZXJ5IHBhdHJvbFxuICAgICAgICAgICAgYm9keS5jZW50ZXIueSArPSBib2R5LnNpemUueTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJvZHkudG90YWxSYWRpYW5zICs9IGJvZHkucmFkaWFucyAqIDAuNTtcbiAgICAgICAgYm9keS5jZW50ZXIueCArPSBib2R5LnNwZWVkWDtcbiAgICAgICAgYm9keS5wYXRyb2xYICs9IGJvZHkuc3BlZWRYO1xuICAgICAgICBib2R5LmNlbnRlci55ICs9IGJvZHkuc2NhbGVIZWlnaHQgKiBNYXRoLnNpbihib2R5LnRvdGFsUmFkaWFucyk7XG5cbiAgICB9XG59O1xuXG5jb25zdCBkcm9wRGlhZ29uYWwgPSB7XG5cbiAgICBleGVjdXRlOiBmdW5jdGlvbihib2R5LCBnYW1lU2l6ZSkge1xuXG4gICAgICAgIGlmIChib2R5LnBhdHJvbFggPCAtYm9keS5nYW1lLmZsZWV0UGF0cm9sX1ggfHwgYm9keS5wYXRyb2xYID4gKGJvZHkuZ2FtZS5mbGVldFBhdHJvbF9YKSkge1xuICAgICAgICAgICAgYm9keS5zcGVlZFggPSAtYm9keS5zcGVlZFg7XG4gICAgICAgICAgICAvLyBib2R5LnJhZGlhbnMgPSAtYm9keS5yYWRpYW5zO1xuXG4gICAgICAgICAgICAvLyBEcm9wcyBkb3duIGFmdGVyIGV2ZXJ5IHBhdHJvbFxuICAgICAgICAgICAgYm9keS5jZW50ZXIueSArPSBib2R5LnNpemUueTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgYm9keS5jZW50ZXIueCArPSAoYm9keS5zcGVlZFggKTtcbiAgICAgICAgYm9keS5wYXRyb2xYICs9IChib2R5LnNwZWVkWCk7XG4gICAgICAgIGJvZHkuY2VudGVyLnkgKz0gKGJvZHkuc3BlZWRYICogMC41KTtcbiAgICAgICAgXG4gICAgfVxufTtcblxuY2xhc3MgQnVsbGV0IHtcbiAgICBjb25zdHJ1Y3RvcihjZW50ZXIsIHZlbG9jaXR5LCBnYW1lU2l6ZSkge1xuICAgICAgICB0aGlzLmdhbWVTaXplID0gZ2FtZVNpemU7XG4gICAgICAgIHRoaXMuY2VudGVyID0gY2VudGVyO1xuICAgICAgICB0aGlzLnZlbG9jaXR5ID0gdmVsb2NpdHk7XG4gICAgICAgIHRoaXMudmlzaWJsZSA9IHRydWU7XG4gICAgICAgIHRoaXMucmVtb3ZlID0gZmFsc2U7XG4gICAgICAgIHRoaXMuc2l6ZSA9IGdldFNwcml0ZVNpemUoJ2J1bGxldCcsIGdhbWVTaXplKTtcbiAgICB9XG4gICAgdXBkYXRlKCkge1xuICAgICAgICB0aGlzLmNlbnRlci54ICs9IHRoaXMudmVsb2NpdHkueDtcbiAgICAgICAgdGhpcy5jZW50ZXIueSArPSB0aGlzLnZlbG9jaXR5Lnk7XG5cbiAgICAgICAgLy8gSWYgdGhlIGJ1bGxldCBtb3ZlcyBvZmYgdGhlIGJvYXJkXG4gICAgICAgIC8vIHNldCB0byB2aXNpYmxlID0gZmFsc2VcbiAgICAgICAgaWYgKHRoaXMuY2VudGVyLnkgPCAwIC0gKHRoaXMuZ2FtZVNpemUueSAqIDAuMTApIHx8XG4gICAgICAgICAgICB0aGlzLmNlbnRlci55ID4gdGhpcy5nYW1lU2l6ZS55ICogMS4xMCB8fFxuICAgICAgICAgICAgdGhpcy5jZW50ZXIueCA8IDAgLSAodGhpcy5nYW1lU2l6ZS54ICogMC4xMCkgfHxcbiAgICAgICAgICAgIHRoaXMuY2VudGVyLnggPiB0aGlzLmdhbWVTaXplLnggKiAxLjEwKSB7XG5cbiAgICAgICAgICAgIHRoaXMudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGRyYXcoc2NyZWVuLCBib2R5KSB7XG4gICAgICAgIHNjcmVlbi5kcmF3SW1hZ2UoZ2FtZS5lbmVteV9idWxsZXRJbWcsIGJvZHkuY2VudGVyLnggLSBib2R5LnNpemUueCAvIDIsXG4gICAgICAgICAgICBib2R5LmNlbnRlci55IC0gYm9keS5zaXplLnkgLyAyLCBib2R5LnNpemUueCwgYm9keS5zaXplLnkpO1xuICAgIH1cbn1cblxuXG5jbGFzcyBNaXNzbGUge1xuICAgIGNvbnN0cnVjdG9yKGNlbnRlciwgdmVsb2NpdHksIGdhbWVTaXplKSB7XG4gICAgICAgIHRoaXMuZ2FtZVNpemUgPSBnYW1lU2l6ZTtcbiAgICAgICAgLy8gdGhpcy5zaXplID0geyB4OiAxNSwgeTogMjUgfTtcbiAgICAgICAgdGhpcy5zaXplID0gZ2V0U3ByaXRlU2l6ZSgnbWlzc2xlJywgZ2FtZVNpemUpO1xuICAgICAgICB0aGlzLmNlbnRlciA9IGNlbnRlcjtcbiAgICAgICAgdGhpcy52ZWxvY2l0eSA9IHZlbG9jaXR5O1xuICAgICAgICB0aGlzLnZpc2libGUgPSB0cnVlO1xuICAgICAgICB0aGlzLnJlbW92ZSA9IGZhbHNlO1xuICAgIH1cbiAgICB1cGRhdGUoKSB7XG4gICAgICAgIHRoaXMuY2VudGVyLnggKz0gdGhpcy52ZWxvY2l0eS54O1xuICAgICAgICB0aGlzLmNlbnRlci55ICs9IHRoaXMudmVsb2NpdHkueTtcblxuICAgICAgICAvLyBJZiB0aGUgTWlzc2xlIG1vdmVzIG9mZiB0aGUgYm9hcmRcbiAgICAgICAgLy8gc2V0IHZpc2libGUgdG8gZmFzbGVcbiAgICAgICAgaWYgKHRoaXMuY2VudGVyLnkgPCAwIC0gKHRoaXMuZ2FtZVNpemUueSAqIDAuMTApIHx8XG4gICAgICAgICAgICB0aGlzLmNlbnRlci55ID4gdGhpcy5nYW1lU2l6ZS55ICogMS4xMCB8fFxuICAgICAgICAgICAgdGhpcy5jZW50ZXIueCA8IDAgLSAodGhpcy5nYW1lU2l6ZS54ICogMC4xMCkgfHxcbiAgICAgICAgICAgIHRoaXMuY2VudGVyLnggPiB0aGlzLmdhbWVTaXplLnggKiAxLjEwKSB7XG5cbiAgICAgICAgICAgIHRoaXMudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGRyYXcoc2NyZWVuLCBib2R5KSB7XG4gICAgICAgIHNjcmVlbi5kcmF3SW1hZ2UoZ2FtZS5taXNzbGVJbWcsIGJvZHkuY2VudGVyLnggLSBib2R5LnNpemUueCAvIDIsXG4gICAgICAgICAgICBib2R5LmNlbnRlci55IC0gYm9keS5zaXplLnkgLyAyLCBib2R5LnNpemUueCwgYm9keS5zaXplLnkpO1xuICAgIH1cbn1cblxuY29uc3QgS2V5Ym9hcmRlciA9IGZ1bmN0aW9uKGdhbWUpIHtcbiAgICAgICAgbGV0IGtleVN0YXRlID0ge307IC8vIG5vdCBjb25zdFxuXG4gICAgICAgIHdpbmRvdy5vbmtleWRvd24gPSBmdW5jdGlvbihlKXtcbiAgICAgICAgICAgIGtleVN0YXRlW2Uua2V5Q29kZV0gPSB0cnVlO1xuXG4gICAgICAgICAgICBnYW1lLmtleVByZXNzZWQoZSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgd2luZG93Lm9ua2V5dXAgPSBmdW5jdGlvbihlKXtcbiAgICAgICAgICAgIGtleVN0YXRlW2Uua2V5Q29kZV0gPSBmYWxzZTtcbiAgICAgICAgICAgIGdhbWUua2V5VXAoZSk7XG4gICAgICAgIH07XG5cblxuICAgICAgICB0aGlzLmlzRG93biA9IGZ1bmN0aW9uKGtleUNvZGUpIHtcbiAgICAgICAgICAgIHJldHVybiBrZXlTdGF0ZVtrZXlDb2RlXSA9PT0gdHJ1ZTtcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLktFWVMgPSB7IExFRlQ6IDM3LCBSSUdIVDogMzksIFVQOiA0MCwgRE9XTjogMzgsIFNQQUNFOiAzMiwgUDogODAgfTtcbn07XG5cbi8vIERldGVjdCBjb2xsaXNpb25zXG5jb25zdCBjb2xsaWRpbmcgPSBmdW5jdGlvbihiMSwgYjIpIHtcbiAgICByZXR1cm4gIShiMSA9PT0gYjIgfHxcbiAgICAgICAgKGIxIGluc3RhbmNlb2YgUGxheWVyICYmIGIyIGluc3RhbmNlb2YgTWlzc2xlKSAgfHxcbiAgICAgICAgKGIxIGluc3RhbmNlb2YgTWlzc2xlICYmIGIyIGluc3RhbmNlb2YgUGxheWVyKSAgfHxcbiAgICAgICAgKGIxIGluc3RhbmNlb2YgQnVsbGV0ICYmIGIyIGluc3RhbmNlb2YgQnVsbGV0KSAgfHxcbiAgICAgICAgKGIxIGluc3RhbmNlb2YgTWlzc2xlICYmIGIyIGluc3RhbmNlb2YgTWlzc2xlKSAgfHxcbiAgICAgICAgKGIxIGluc3RhbmNlb2YgSW52YWRlciAmJiBiMiBpbnN0YW5jZW9mIEludmFkZXIpfHxcbiAgICAgICAgKGIxIGluc3RhbmNlb2YgQnVsbGV0ICYmIGIyIGluc3RhbmNlb2YgTWlzc2xlKSAgfHxcbiAgICAgICAgKGIxIGluc3RhbmNlb2YgTWlzc2xlICYmIGIyIGluc3RhbmNlb2YgQnVsbGV0KSAgfHxcbiAgICAgICAgKGIxIGluc3RhbmNlb2YgSW52YWRlciAmJiBiMiBpbnN0YW5jZW9mIEJ1bGxldCkgfHxcbiAgICAgICAgKGIxIGluc3RhbmNlb2YgQnVsbGV0ICYmIGIyIGluc3RhbmNlb2YgSW52YWRlcikgfHxcbiAgICAgICAgYjEuY2VudGVyLnggKyBiMS5zaXplLnggLyAyIDwgYjIuY2VudGVyLnggLSBiMi5zaXplLnggLyAyIHx8XG4gICAgICAgIGIxLmNlbnRlci55ICsgYjEuc2l6ZS55IC8gMiA8IGIyLmNlbnRlci55IC0gYjIuc2l6ZS55IC8gMiB8fFxuICAgICAgICBiMS5jZW50ZXIueCAtIGIxLnNpemUueCAvIDIgPiBiMi5jZW50ZXIueCArIGIyLnNpemUueCAvIDIgfHxcbiAgICAgICAgYjEuY2VudGVyLnkgLSBiMS5zaXplLnkgLyAyID4gYjIuY2VudGVyLnkgKyBiMi5zaXplLnkgLyAyKTtcbn07XG5cbmNvbnN0IHRvZ2dsZVBhdXNlZCA9IGZ1bmN0aW9uKCkge1xuICAgIGlmICghdGhpcy5wYXVzZWQpIHtcbiAgICAgICAgZ2FtZS5wYXVzZWRUb2FzdCAmJiBnYW1lLnBhdXNlZFRvYXN0Lmluc2VydEFmdGVyKCdjYW52YXMnKTtcbiAgICAgICAgZ2FtZS5wYXVzZWRUb2FzdCAmJiBnYW1lLnBhdXNlZFRvYXN0LnNob3coKTsgICAgICAgIFxuICAgIH0gZWxzZSB7XG4gICAgICAgICQoJyNwYXVzZWRUb2FzdCcpLmRldGFjaCgpO1xuICAgIH1cbiAgICAgICAgdGhpcy5wYXVzZWQgPSAhdGhpcy5wYXVzZWQ7XG59O1xuXG5jb25zdCBsb2FkU291bmQgPSBmdW5jdGlvbih1cmwsIGNhbGxiYWNrKSB7XG4gICAgY29uc3QgbG9hZGVkID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGNhbGxiYWNrKHNvdW5kKTtcbiAgICAgICAgc291bmQucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2FucGxheXRocm91Z2gnLCBsb2FkZWQpO1xuICAgIH07XG5cbmNvbnN0IHNvdW5kID0gbmV3IEF1ZGlvKHVybCk7XG4gICAgc291bmQuYWRkRXZlbnRMaXN0ZW5lcignY2FucGxheXRocm91Z2gnLCBsb2FkZWQpO1xuICAgIHNvdW5kLmxvYWQoKTtcbn07XG5cbmNvbnN0IHJhZGFyR3VpZGFuY2UgPSBmdW5jdGlvbihzaG9vdGVyLCB0YXJnZXQsIHZlbG9jaXR5KSB7XG4gICAgbGV0IHJldiA9IC0xLFxuICAgICAgICBkeCA9IHNob290ZXIuY2VudGVyLnggLSB0YXJnZXQuY2VudGVyLngsXG4gICAgICAgIGR5ID0gc2hvb3Rlci5jZW50ZXIueSAtIHRhcmdldC5jZW50ZXIueSxcbiAgICAgICAgdGhldGEgPSBNYXRoLmF0YW4oZHkgLyBkeCk7XG5cbiAgICBpZiAodGFyZ2V0LmNlbnRlci54IDwgc2hvb3Rlci5jZW50ZXIueCAmJiB0YXJnZXQuY2VudGVyLnkgPiBzaG9vdGVyLmNlbnRlci55KSBcbiAgICAgICAgcmV2ID0gMTtcbiAgICBlbHNlIGlmICh0YXJnZXQuY2VudGVyLnggPCBzaG9vdGVyLmNlbnRlci54ICYmIHRhcmdldC5jZW50ZXIueSA8IFxuICAgICAgICBzaG9vdGVyLmNlbnRlci55KSByZXYgPSAxO1xuXG4gICAgbGV0IHZlbG9jaXR5X0R4ID0gcmV2ICogdmVsb2NpdHkgKiBNYXRoLmNvcyh0aGV0YSksXG4gICAgICAgIHZlbG9jaXR5X0R5ID0gcmV2ICogdmVsb2NpdHkgKiBNYXRoLnNpbih0aGV0YSk7XG5cbiAgICByZXR1cm4ge3g6IHZlbG9jaXR5X0R4LCB5OiB2ZWxvY2l0eV9EeX07XG59O1xuY2xhc3MgU3ByaXRlUGFpbnRlciB7XG4gICAgY29uc3RydWN0b3IoaW1hZ2VzKSB7XG4gICAgICAgIHRoaXMuaW1hZ2VzID0gaW1hZ2VzO1xuICAgICAgICB0aGlzLmltYWdlc0luZGV4ID0gMDtcbiAgICB9XG4gICAgYWR2YW5jZShib2R5KSB7XG4gICAgICAgIGlmICh0aGlzLmltYWdlc0luZGV4ID09PSB0aGlzLmltYWdlcy5sZW5ndGggLSAxKSB7XG4gICAgICAgICAgICB0aGlzLmltYWdlc0luZGV4ID0gMDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuaW1hZ2VzSW5kZXgrKztcbiAgICAgICAgfVxuICAgIH1cbiAgICBkcmF3KHNjcmVlbiwgYm9keSkge1xuICAgICAgICBsZXQgc3ByaXRlSW1hZ2UgPSB0aGlzLmltYWdlc1t0aGlzLmltYWdlc0luZGV4XTtcblxuICAgICAgICBzY3JlZW4uZHJhd0ltYWdlKHNwcml0ZUltYWdlLCBib2R5LmNlbnRlci54IC0gYm9keS5zaXplLnggLyAyLFxuICAgICAgICAgICAgYm9keS5jZW50ZXIueSAtIGJvZHkuc2l6ZS55IC8gMiwgYm9keS5zaXplLngsIGJvZHkuc2l6ZS55KTtcbiAgICB9XG59XG5cblxuY2xhc3MgRXhwbG9zaW9uU3ByaXRlUGFpbnRlciB7XG4gICAgY29uc3RydWN0b3IoaW1hZ2VzLCBraW5kT2ZCb2R5KSB7XG4gICAgICAgIHRoaXMuaW1hZ2VzID0gaW1hZ2VzO1xuICAgICAgICB0aGlzLmltYWdlc0luZGV4ID0gMDtcbiAgICAgICAgdGhpcy5raW5kT2ZCb2R5ID0ga2luZE9mQm9keSA/IGtpbmRPZkJvZHkgOiBudWxsO1xuICAgIH1cbiAgICBhZHZhbmNlKGJvZHkpIHtcbiAgICAgICAgLy8gTGFzdCBpbWFnZSBzbyByZXNldCBldmVyeXRoaW5nIGhlcmVcbiAgICAgICAgaWYgKHRoaXMuaW1hZ2VzSW5kZXggPT09IHRoaXMuaW1hZ2VzLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmtpbmRPZkJvZHkgPT09ICdJbnZhZGVyJykge1xuICAgICAgICAgICAgICAgIGJvZHkucmVtb3ZlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBib2R5LnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBib2R5LmFuaW1hdGluZyA9IGZhbHNlO1xuXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMua2luZE9mQm9keSA9PT0gJ1BsYXllcicpIHtcbiAgICAgICAgICAgICAgICBib2R5LnJlbW92ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGJvZHkudmlzaWJsZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgYm9keS5hbmltYXRpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBib2R5Lm5hbWUgPSAncGxheWVyJztcbiAgICAgICAgICAgICAgICBib2R5LnNpemUueCAvPSBnYW1lLnBsYXllckxpdmVzTGVmdCA/IDIuNSA6IDYuMDtcbiAgICAgICAgICAgICAgICBib2R5LnNpemUueSAvPSBnYW1lLnBsYXllckxpdmVzTGVmdCA/IDIuNSA6IDYuMDtcblxuICAgICAgICAgICAgICAgIC8vIFBsYXllciBzdGlsbCBhbGl2ZSB0aGVuIHB1dCB0aGVtIGJhY2sgb24gdGhlIGNhbnZhc1xuICAgICAgICAgICAgICAgIGlmIChnYW1lLnBsYXllckxpdmVzTGVmdCA+IDAgJiYgZ2FtZS5wbGF5ZXJTdGF0dXMgPT09ICdERUFEJykge1xuICAgICAgICAgICAgICAgICAgICBib2R5LnBhaW50ZXIgPSBuZXcgU3ByaXRlUGFpbnRlcihbZ2FtZS5wbGF5ZXJJbWddKTtcbiAgICAgICAgICAgICAgICAgICAgZ2FtZS5wbGF5ZXJTdGF0dXMgPSAnQUxJVkUnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYm9keS5yZW1vdmUgPSB0cnVlO1xuICAgICAgICAgICAgICAgIGJvZHkudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGJvZHkuYW5pbWF0aW5nID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmltYWdlc0luZGV4Kys7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZHJhdyhzY3JlZW4sIGJvZHkpIHtcbiAgICAgICAgbGV0IHNwcml0ZUltYWdlID0gdGhpcy5pbWFnZXNbdGhpcy5pbWFnZXNJbmRleF07XG4gICAgICAgIGJvZHkuYW5pbWF0aW5nID0gdHJ1ZTtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgc2NyZWVuLmRyYXdJbWFnZShzcHJpdGVJbWFnZSwgYm9keS5jZW50ZXIueCAtIGJvZHkuc2l6ZS54IC8gMixcbiAgICAgICAgICAgICAgICBib2R5LmNlbnRlci55IC0gYm9keS5zaXplLnkgLyAyLCBib2R5LnNpemUueCwgYm9keS5zaXplLnkpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgLy8gc3RhdGVtZW50cyB0byBoYW5kbGUgYW55IGV4Y2VwdGlvbnNcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignRXJyb3Igd3JpdGluZyBzcGl0ZSB0byBzY3JlZW4gJywgZXJyb3IpOyAvLyBwYXNzIGV4Y2VwdGlvbiBvYmplY3QgdG8gZXJyb3IgaGFuZGxlclxuICAgICAgICB9XG5cbiAgICB9XG59XG5cbmNsYXNzIEN5Y2xlSW1hZ2VzIHtcbiAgICBjb25zdHJ1Y3RvcihmcmFtZUNudCwgUEFHRV9GTElQX0lOVEVSVkFMKSB7XG4gICAgICAgIHRoaXMuZnJhbWVDb3VudGVyID0gMDtcbiAgICAgICAgdGhpcy5mcmFtZUNudCA9IGZyYW1lQ250O1xuICAgICAgICB0aGlzLmxhc3RBZHZhbmNlID0gMDtcbiAgICAgICAgdGhpcy5QQUdFX0ZMSVBfSU5URVJWQUwgPSBQQUdFX0ZMSVBfSU5URVJWQUw7XG4gICAgfVxuICAgIGV4ZWN1dGUoYm9keSwgZ2FtZVNpemUsIHRpbWUpIHtcbiAgICAgICAgaWYgKHRpbWUgLSB0aGlzLmxhc3RBZHZhbmNlID4gdGhpcy5QQUdFX0ZMSVBfSU5URVJWQUwpIHtcbiAgICAgICAgICAgIGJvZHkucGFpbnRlci5hZHZhbmNlKGJvZHkpO1xuICAgICAgICAgICAgdGhpcy5sYXN0QWR2YW5jZSA9IHRpbWU7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qIFdlIHN0b3JlIGxldmVsIGRhdGEgaGVyZSBpbiBhbiBhcnJheSBvZiAgb2JqZWN0c1xuICogQHNwZWVkWCAtIHNwZWVkIG9mIEludmFkZXJzXG4gKiBAYmVoYXZpb3IgLSB3aGF0IHBhdHRlcm4gZG8gdGhlIEludmFkZXIgdGFrZSBvbiB0aGUgc2NyZWVuXG4gKiBAcm93ICYgQGNvbCBob3cgbWFueSBhcmUgb24gdGhlIHNjcmVlbiBcbiAqIEBiYWNrZ3JvdW5kSW1nIHBsYWNlaG9sZGVyIG9iaiBmb3IgYmFja2dyb3VuZCBpbWFnZS5cbiAqIEBpbnZhZGVyRmlyZVJhdGUgb25seSBzbWFsbCBwZXJjZW50YWdlIGlzIG5lZWRlZCA+IDEwJVxuICogQGludmFkZXJIaXRzIG51bWJlciBvZiBoaXRzIHRvIGtpbGwgYW4gSW52YWRlciAtLSBGb3IgZnV0dXJlIHVzZS5cbiovXG4vLyBUT0RPOiBNYWtlIHRoaXMgYSBEQiBNb25nbywgTXlTcWwsIG9yIFBvc3RncmVzIGNhbGwgd2hvIGtub3dzPz8/XG5jb25zdCBsZXZlbERhdGEgPSBbXG4gICAgeyAgIHNwZWVkWDogMC4wMDIwLFxuICAgICAgICBiZWhhdmlvcjogc2luZVdhdmUsXG4gICAgICAgIGludmFkZXJJbWFnZToge30sIFxuICAgICAgICByb3c6IDIsXG4gICAgICAgIGNvbDogNyxcbiAgICAgICAgYmFja2dyb3VuZEltZzoge30sXG4gICAgICAgIGludmFkZXJGaXJlUmF0ZTogMC45OTUsXG4gICAgICAgIGludmFkZXJIaXRzOiAxXG4gICAgfSxcbiAgICB7ICAgc3BlZWRYOiAwLjAwMjAsXG4gICAgICAgIGJlaGF2aW9yOiBoYWxmQ2lyY2xlLFxuICAgICAgICBpbnZhZGVySW1hZ2U6IHt9LCBcbiAgICAgICAgcm93OiAzLFxuICAgICAgICBjb2w6IDcsXG4gICAgICAgIGJhY2tncm91bmRJbWc6IHt9LFxuICAgICAgICBpbnZhZGVyRmlyZVJhdGU6IDAuOTk1LFxuICAgICAgICBpbnZhZGVySGl0czogMVxuICAgIH0sXG4gICAgeyAgIHNwZWVkWDogMC4wMDIyLFxuICAgICAgICBiZWhhdmlvcjogcmlnaHRUb0xlZnQsXG4gICAgICAgIGludmFkZXJJbWFnZToge30sIFxuICAgICAgICByb3c6IDQsXG4gICAgICAgIGNvbDogNyxcbiAgICAgICAgYmFja2dyb3VuZEltZzoge30sXG4gICAgICAgIGludmFkZXJGaXJlUmF0ZTogMC45OTQsXG4gICAgICAgIGludmFkZXJIaXRzOiAxXG4gICAgfSxcbiAgICB7ICAgc3BlZWRYOiAwLjAwMjI1LFxuICAgICAgICBiZWhhdmlvcjogZHJvcERpYWdvbmFsLFxuICAgICAgICBpbnZhZGVySW1hZ2U6IHt9LCBcbiAgICAgICAgcm93OiA1LFxuICAgICAgICBjb2w6IDcsXG4gICAgICAgIGJhY2tncm91bmRJbWc6IHt9LFxuICAgICAgICBpbnZhZGVyRmlyZVJhdGU6IDAuOTk0LFxuICAgICAgICBpbnZhZGVySGl0czogMVxuICAgIH0sXG5dO1xuXG4vLyBXZSBjcmVhdGUgYSBuZXcgZ2FtZSBoZXJlXG5jb25zdCBnYW1lID0gbmV3IEdhbWUoXCJEZWZlbmRlclwiLCBcInNjcmVlblwiKTtcblxuLy8gUGF1c2UgdGhlIGdhbWVcbmdhbWUuYWRkS2V5TGlzdGVuZXIoeyBrZXk6ICdwJywgbGlzdGVuZXI6IGZ1bmN0aW9uKCkge1xuICAgICAgICBnYW1lLnRvZ2dsZVBhdXNlZCgpO1xufX0pO1xuXG4vLyBQb3NpdGlvbiB0aGUgUGxheWVyIGJhY2sgYXQgdGhlIHN0YXJ0XG5nYW1lLmFkZEtleUxpc3RlbmVyKHtrZXk6ICdjJywgbGlzdGVuZXI6IGZ1bmN0aW9uKCkge1xuICAgIGdhbWUucGxheWVyLmNlbnRlciA9IHsgeDogZ2FtZS5nYW1lU2l6ZS54IC8gMiwgeTogZ2FtZS5nYW1lU2l6ZS55IC0gMS4wICogZ2FtZS5wbGF5ZXIuc2l6ZS55IH07XG59fSk7XG5cbi8vIFRIRSBIeXBlcnNwYWNlIGJ1dHRvbiB0byB0byBnZXQgb3V0IG9mIGEgVE9VR0ggSkFNP1xuLy8gTWF5YmUgTE9MISEhIEl0IGlzIHJhbmRvbSBwb3NpdGlvbmluZ1xuLy8gSGFkIHRvIHVzZSBcInNcIiBhcyBcImhcIiBteSBwcmVmZXJyZWQga2V5IGFuZCBcInhcIiBhcmVcbi8vIHNvbWVob3cgaW50ZXJjZXB0ZWQgYnkgdGhlIGJyb3dzZXIuXG5nYW1lLmFkZEtleUxpc3RlbmVyKHtrZXk6ICdzJywgbGlzdGVuZXI6IGZ1bmN0aW9uKCkge1xuICAgIGdhbWUucGxheWVyLmNlbnRlciA9IHsgeDogZ2FtZS5nYW1lU2l6ZS54ICogTWF0aC5yYW5kb20oKSwgeTogZ2FtZS5nYW1lU2l6ZS55ICogTWF0aC5yYW5kb20oKSAtIGdhbWUucGxheWVyLnNpemUueX07XG59fSk7XG5cbmdhbWUuYWRkS2V5TGlzdGVuZXIoeyBrZXk6ICdzcGFjZWJhcicsICBsaXN0ZW5lcjogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAvLyByZXNldCBjb3VudGVyIGZvciBidWxsZXRzXG4gICAgICAgICAgICAvLyBXaGVuIHNwYWNlYmFyIGNvbWVzIHVwXG4gICAgICAgICAgICAvLyBrZXlVcCgpIHVzZXMgdGhpcyBmdW5jdGlvblxuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBnYW1lLmd1bl9Mb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIH0sIDIwMCk7XG5cbiAgICAgICAgICAgIGlmIChzZWxmLmdhbWVPdmVyKSB7XG4gICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGdhbWUucGF1c2VkICYmICFzZWxmLmdhbWVPdmVyKSB7XG4gICAgICAgICAgICAgICAgZ2FtZS50b2dnbGVQYXVzZWQoKTtcbiAgICAgICAgICAgIH1cblxufX0pO1xuXG4vLyBSZXNldCB0aGVzZSB3aGVuIHRoZSBhcnJvdyBrZXlzIGNvbWUgVVBcbmdhbWUuYWRkS2V5TGlzdGVuZXIoeyBrZXk6ICdsZWZ0IGFycm93JywgIGxpc3RlbmVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGdhbWUucGxheWVyLnN0ZXBfWCA9IDQ7XG59fSk7XG5cbmdhbWUuYWRkS2V5TGlzdGVuZXIoeyBrZXk6ICdyaWdodCBhcnJvdycsICBsaXN0ZW5lcjogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBnYW1lLnBsYXllci5zdGVwX1ggPSA0O1xufX0pO1xuZ2FtZS5hZGRLZXlMaXN0ZW5lcih7IGtleTogJ3VwIGFycm93JywgIGxpc3RlbmVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGdhbWUucGxheWVyLnN0ZXBfWSA9IDQ7XG59fSk7XG5cbmdhbWUuYWRkS2V5TGlzdGVuZXIoeyBrZXk6ICdkb3duIGFycm93JywgIGxpc3RlbmVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGdhbWUucGxheWVyLnN0ZXBfWSA9IDQ7XG59fSk7XG5cbiQoJyNwYXVzZWRUb2FzdCcpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpe1xuICAgIGdhbWUudG9nZ2xlUGF1c2VkKCk7XG59KTtcblxuJCgnLm5ld0dhbWVCdXR0b24sIC5jbG9zZUhpZ2hTY29yZVRvYXN0Jykub24oJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAvLyDwn5qnIFVuZGVyIGNvbnN0cnVjdGlvbiDwn5qnXG4gICAgLy8gY29uc29sZS5sb2coJ2dhbWUuc3RhcnQoKTsnKTtcbiAgICAvLyBHZXQgdGhlIHJlc2V0KCkgd29ya2luZyBsYXRlclxuICAgIC8vIGdhbWUucmVzZXQoKTtcbiAgICAvLyBnYW1lLnN0YXJ0KCk7XG4gICAgLy8gd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpOyAvLyBpbmNvbnNpc3RlbnRcbiAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW47XG59KTtcblxuJCgnI25ld0dhbWVGcm9tSGlnaFNjb3JlLm5ld0dhbWUnKS5vbignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gd2luZG93LmxvY2F0aW9uLm9yaWdpbjtcbn0pO1xuXG4kKHdpbmRvdykub24oJ2JsdXInLCBmdW5jdGlvbigpIHtcbiAgICBpZiAoIWdhbWUuZ2FtZU92ZXIgJiYgIWdhbWUucGF1c2VkKSB7XG4gICAgICAgIGdhbWUudG9nZ2xlUGF1c2VkKCk7XG59fSk7XG5cbiQod2luZG93KS5vbignZm9jdXMnLCBmdW5jdGlvbigpIHtcbiAgICBpZiAoZ2FtZS5wYXVzZWQpIHtcbiAgICAgICAgZ2FtZS50b2dnbGVQYXVzZWQoKTtcbn19KTtcbiAgICBcbiAgICAvLyBRdWV1ZSBJbWFnZXMgaGVyZVxuXG4gICAgLy8gTGV2ZWwgQmFja2dyb3VuZCBJbWFnZXNcbiAgICBnYW1lLnF1ZXVlSW1hZ2UoXCIvaW1hZ2VzL1NwYWNlXzFfc2xpY2UuanBnXCIpO1xuICAgIGdhbWUucXVldWVJbWFnZShcIi9pbWFnZXMvTWlsa3lfV2F5LmpwZ1wiKTtcbiAgICBnYW1lLnF1ZXVlSW1hZ2UoXCIvaW1hZ2VzL0dhbGF4eS5qcGdcIik7XG4gICAgZ2FtZS5xdWV1ZUltYWdlKFwiL2ltYWdlcy9TcGFjZV8xLmpwZ1wiKTtcbiAgICAvLyBnYW1lLnF1ZXVlSW1hZ2UoXCIvaW1hZ2VzL1wiKTtcblxuICAgIGdhbWUucXVldWVJbWFnZShcIi9pbWFnZXMvU3RhcnNoaXBzL3N0YXJzaGlwc18wMDA3X0V4LXZpbmcucG5nXCIpO1xuICAgIGdhbWUucXVldWVJbWFnZShcIi9pbWFnZXMvbWlzc2xlLnBuZ1wiKTtcbiAgICAvLyAgUXVldWUgQWxpZW4gc2hpcHNcbiAgICBnYW1lLnF1ZXVlSW1hZ2UoXCIvaW1hZ2VzL1N0YXJzaGlwcy9zdGFyc2hpcHNfMDAwNl9Cb3ctZmlnaHRlcl9SZXYucG5nXCIpO1xuICAgIGdhbWUucXVldWVJbWFnZShcIi9pbWFnZXMvU3RhcnNoaXBzL3N0YXJzaGlwc18wMDA0X0ljZS1TcGVlZHN0ZXJfUmV2LnBuZ1wiKTtcbiAgICBnYW1lLnF1ZXVlSW1hZ2UoXCIvaW1hZ2VzL1N0YXJzaGlwcy9zdGFyc2hpcHNfMDAwNV9DZW50ZW5pYWwtSGF3a19SZXYucG5nXCIpO1xuICAgIGdhbWUucXVldWVJbWFnZShcIi9pbWFnZXMvU3RhcnNoaXBzL3N0YXJzaGlwc18wMDAxX1N1bi1raWxsZXJfUmV2LnBuZ1wiKTtcbiAgICBnYW1lLnF1ZXVlSW1hZ2UoXCIvaW1hZ2VzL2VuZW15LWJ1bGxldC5wbmdcIik7XG5cbiAgICAvLyBFeHBsb3Npb24gSW1hZ2VzXG4gICAgZ2FtZS5xdWV1ZUltYWdlKFwiL2ltYWdlcy9pbWcvZXhwbG9kZV8xLnBuZ1wiKTtcbiAgICBnYW1lLnF1ZXVlSW1hZ2UoXCIvaW1hZ2VzL2ltZy9leHBsb2RlXzIucG5nXCIpO1xuICAgIGdhbWUucXVldWVJbWFnZShcIi9pbWFnZXMvaW1nL2V4cGxvZGVfMy5wbmdcIik7XG4gICAgZ2FtZS5xdWV1ZUltYWdlKFwiL2ltYWdlcy9pbWcvZXhwbG9kZV80LnBuZ1wiKTtcbiAgICBnYW1lLnF1ZXVlSW1hZ2UoXCIvaW1hZ2VzL2ltZy9leHBsb2RlXzUucG5nXCIpO1xuICAgIGdhbWUucXVldWVJbWFnZShcIi9pbWFnZXMvaW1nL2V4cGxvZGVfNi5wbmdcIik7XG4gICAgZ2FtZS5xdWV1ZUltYWdlKFwiL2ltYWdlcy9pbWcvZXhwbG9kZV83LnBuZ1wiKTtcbiAgICBnYW1lLnF1ZXVlSW1hZ2UoXCIvaW1hZ2VzL2ltZy9leHBsb2RlXzgucG5nXCIpO1xuICAgIGdhbWUucXVldWVJbWFnZShcIi9pbWFnZXMvaW1nL2V4cGxvZGVfOS5wbmdcIik7XG4gICAgZ2FtZS5xdWV1ZUltYWdlKFwiL2ltYWdlcy9pbWcvZXhwbG9kZV8xMC5wbmdcIik7XG4gICAgZ2FtZS5xdWV1ZUltYWdlKFwiL2ltYWdlcy9pbWcvZXhwbG9kZV8xMS5wbmdcIik7XG4gICAgZ2FtZS5xdWV1ZUltYWdlKFwiL2ltYWdlcy9pbWcvZXhwbG9kZV8xMi5wbmdcIik7XG4gICAgZ2FtZS5xdWV1ZUltYWdlKFwiL2ltYWdlcy9pbWcvZXhwbG9kZV8xMy5wbmdcIik7XG4gICAgZ2FtZS5xdWV1ZUltYWdlKFwiL2ltYWdlcy9pbWcvZXhwbG9kZV8xNC5wbmdcIik7XG4gICAgZ2FtZS5xdWV1ZUltYWdlKFwiL2ltYWdlcy9pbWcvZXhwbG9kZV8xNS5wbmdcIik7XG4gICAgZ2FtZS5xdWV1ZUltYWdlKFwiL2ltYWdlcy9pbWcvZXhwbG9kZV8xNi5wbmdcIik7XG4gICAgXG5cbiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgICBpbnRlcnZhbCA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIGxldCBsb2FkaW5nUGVyY2VudENvbXBsZXRlID0gZ2FtZS5sb2FkSW1hZ2VzKCk7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdsb2FkaW5nIFBlcmNlbnRhZ2UgQ29tcGxldGVkOiAnLCBsb2FkaW5nUGVyY2VudENvbXBsZXRlKTtcblxuICAgICAgICBpZiAobG9hZGluZ1BlcmNlbnRDb21wbGV0ZSA9PT0gMTAwKSB7XG4gICAgICAgICAgICBnYW1lLl9ERUJVRyAmJiBjb25zb2xlLmxvZyhcImxvYWRpbmcgLi4uIDEwMCUgQ29tcGxldGU6IE9LISEhXCIpO1xuICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XG4gICAgICAgIH1cblxuICAgICAgICAgICAgLy8gV2UgTVVTVCBMb2FkIEFMTCB0aGVzZSBJbWFnZXMgaGVyZVxuICAgICAgICAgICAgZ2FtZS5iYWNrZ3JvdW5kSW1nID0gZ2FtZS5nZXRJbWFnZShcIi9pbWFnZXMvU3BhY2VfMV9zbGljZS5qcGdcIik7XG4gICAgICAgICAgICBnYW1lLnBsYXllckltZyA9IGdhbWUuZ2V0SW1hZ2UoXCIvaW1hZ2VzL1N0YXJzaGlwcy9zdGFyc2hpcHNfMDAwN19FeC12aW5nLnBuZ1wiKTtcbiAgICAgICAgICAgIGdhbWUubWlzc2xlSW1nID0gZ2FtZS5nZXRJbWFnZShcIi9pbWFnZXMvbWlzc2xlLnBuZ1wiKTtcbiAgICAgICAgICAgIGdhbWUuZW5lbXlfYnVsbGV0SW1nID0gZ2FtZS5nZXRJbWFnZShcIi9pbWFnZXMvZW5lbXktYnVsbGV0LnBuZ1wiKTtcblxuICAgICAgICAgICAgLy8gTG9hZCBBbGllbiBzaGlwcyBpbnRvIGxldmVsIG9iaidzXG4gICAgICAgICAgICAvLyBUT0RPOiBMb2FkIGFsbCBidXQgZmlyc3QgbGF0ZXJcbiAgICAgICAgICAgIGdhbWUubGV2ZWxEYXRhWzBdLmludmFkZXJJbWFnZSA9IGdhbWUuZ2V0SW1hZ2UoXCIvaW1hZ2VzL1N0YXJzaGlwcy9zdGFyc2hpcHNfMDAwNl9Cb3ctZmlnaHRlcl9SZXYucG5nXCIpO1xuICAgICAgICAgICAgZ2FtZS5sZXZlbERhdGFbMV0uaW52YWRlckltYWdlID0gZ2FtZS5nZXRJbWFnZShcIi9pbWFnZXMvU3RhcnNoaXBzL3N0YXJzaGlwc18wMDA0X0ljZS1TcGVlZHN0ZXJfUmV2LnBuZ1wiKTtcbiAgICAgICAgICAgIGdhbWUubGV2ZWxEYXRhWzJdLmludmFkZXJJbWFnZSA9IGdhbWUuZ2V0SW1hZ2UoXCIvaW1hZ2VzL1N0YXJzaGlwcy9zdGFyc2hpcHNfMDAwNV9DZW50ZW5pYWwtSGF3a19SZXYucG5nXCIpO1xuICAgICAgICAgICAgZ2FtZS5sZXZlbERhdGFbM10uaW52YWRlckltYWdlID0gZ2FtZS5nZXRJbWFnZShcIi9pbWFnZXMvU3RhcnNoaXBzL3N0YXJzaGlwc18wMDAxX1N1bi1raWxsZXJfUmV2LnBuZ1wiKTtcblxuICAgICAgICAgICAgLy8gVE9ETzogTG9hZCBhbGwgYnV0IGZpcnN0IGxhdGVyXG4gICAgICAgICAgICBnYW1lLmxldmVsRGF0YVswXS5iYWNrZ3JvdW5kSW1nID0gZ2FtZS5nZXRJbWFnZShcIi9pbWFnZXMvU3BhY2VfMV9zbGljZS5qcGdcIik7XG4gICAgICAgICAgICBnYW1lLmxldmVsRGF0YVsxXS5iYWNrZ3JvdW5kSW1nID0gZ2FtZS5nZXRJbWFnZShcIi9pbWFnZXMvTWlsa3lfV2F5LmpwZ1wiKTtcbiAgICAgICAgICAgIGdhbWUubGV2ZWxEYXRhWzJdLmJhY2tncm91bmRJbWcgPSBnYW1lLmdldEltYWdlKFwiL2ltYWdlcy9HYWxheHkuanBnXCIpO1xuICAgICAgICAgICAgZ2FtZS5sZXZlbERhdGFbM10uYmFja2dyb3VuZEltZyA9IGdhbWUuZ2V0SW1hZ2UoXCIvaW1hZ2VzL1NwYWNlXzEuanBnXCIpO1xuXG4gICAgICAgICAgICAvLyBMb2FkIEV4cGxvc2lvbiBJbWFnZXNcbiAgICAgICAgICAgIC8vIFRoZXNlIGFyZSBpbmxpbmUvbG9vcC11bnJvbGxlZCBmb3IgZmFzdGVyIGxvYWRpbmdcbiAgICAgICAgICAgIGdhbWUudG1wMSA9IGdhbWUuZ2V0SW1hZ2UoXCIvaW1hZ2VzL2ltZy9leHBsb2RlXzEucG5nXCIpO1xuICAgICAgICAgICAgZ2FtZS50bXAyID0gZ2FtZS5nZXRJbWFnZShcIi9pbWFnZXMvaW1nL2V4cGxvZGVfMi5wbmdcIik7XG4gICAgICAgICAgICBnYW1lLnRtcDMgPSBnYW1lLmdldEltYWdlKFwiL2ltYWdlcy9pbWcvZXhwbG9kZV8zLnBuZ1wiKTtcbiAgICAgICAgICAgIGdhbWUudG1wNCA9IGdhbWUuZ2V0SW1hZ2UoXCIvaW1hZ2VzL2ltZy9leHBsb2RlXzQucG5nXCIpO1xuICAgICAgICAgICAgZ2FtZS50bXA1ID0gZ2FtZS5nZXRJbWFnZShcIi9pbWFnZXMvaW1nL2V4cGxvZGVfNS5wbmdcIik7XG4gICAgICAgICAgICBnYW1lLnRtcDYgPSBnYW1lLmdldEltYWdlKFwiL2ltYWdlcy9pbWcvZXhwbG9kZV82LnBuZ1wiKTtcbiAgICAgICAgICAgIGdhbWUudG1wNyA9IGdhbWUuZ2V0SW1hZ2UoXCIvaW1hZ2VzL2ltZy9leHBsb2RlXzcucG5nXCIpO1xuICAgICAgICAgICAgZ2FtZS50bXA4ID0gZ2FtZS5nZXRJbWFnZShcIi9pbWFnZXMvaW1nL2V4cGxvZGVfOC5wbmdcIik7XG4gICAgICAgICAgICBnYW1lLnRtcDkgPSBnYW1lLmdldEltYWdlKFwiL2ltYWdlcy9pbWcvZXhwbG9kZV85LnBuZ1wiKTtcbiAgICAgICAgICAgIGdhbWUudG1wMTAgPSBnYW1lLmdldEltYWdlKFwiL2ltYWdlcy9pbWcvZXhwbG9kZV8xMC5wbmdcIik7XG4gICAgICAgICAgICBnYW1lLnRtcDExID0gZ2FtZS5nZXRJbWFnZShcIi9pbWFnZXMvaW1nL2V4cGxvZGVfMTEucG5nXCIpO1xuICAgICAgICAgICAgZ2FtZS50bXAxMiA9IGdhbWUuZ2V0SW1hZ2UoXCIvaW1hZ2VzL2ltZy9leHBsb2RlXzEyLnBuZ1wiKTtcbiAgICAgICAgICAgIGdhbWUudG1wMTMgPSBnYW1lLmdldEltYWdlKFwiL2ltYWdlcy9pbWcvZXhwbG9kZV8xMy5wbmdcIik7XG4gICAgICAgICAgICBnYW1lLnRtcDE0ID0gZ2FtZS5nZXRJbWFnZShcIi9pbWFnZXMvaW1nL2V4cGxvZGVfMTQucG5nXCIpO1xuICAgICAgICAgICAgZ2FtZS50bXAxNSA9IGdhbWUuZ2V0SW1hZ2UoXCIvaW1hZ2VzL2ltZy9leHBsb2RlXzE1LnBuZ1wiKTtcbiAgICAgICAgICAgIGdhbWUudG1wMTYgPSBnYW1lLmdldEltYWdlKFwiL2ltYWdlcy9pbWcvZXhwbG9kZV8xNi5wbmdcIik7XG5cbiAgICB9LCAxNik7XG4gICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gY29uc3QgbG9hZFRvYXN0VGl0bGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvYWRUb2FzdFRpdGxlXCIpO1xuXG4vLyBIaWRlIENhbnZhc1xuJCgnI3NjcmVlbicpLmhpZGUoKTtcblxuXG4vLyBjbGljayB0byBzdGFydCBnYW1lXG4kKCcjbG9hZEJ1dHRvbicpLm9uKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XG5cbi8qIEhpZGUgSFRNTCB1c2luZyBDU1NcbiAqIENsYXNzZXMgYXJlIHVzZWQgZm9yIHNwZWVkXG4gKiB0byByZWR1Y2UgcGFnZSBmbGlja2VyIFxuICogalF1ZXJ5IGZvciBjb252ZW5pZW5jZSAqLyBcbiQoJyNwYXVzZWRUb2FzdCcpLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4kKCcjc2NvcmVUb2FzdCcpLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4kKCcjcHJvZ3Jlc3NiYXInKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuJCgnI2dhbWVPdmVyVG9hc3QnKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuJCgnI2hpZ2hTY29yZVRvYXN0JykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcblxuLy8gZGV0YWNoIGFuZCBjYWNoZSBIVE1MIHNuaXBwZXRcbmdhbWUubG9hZGluZ1RvYXN0ID0gJCgnI2xvYWRpbmdUb2FzdCcpLmRldGFjaCgpO1xuZ2FtZS5wYXVzZWRUb2FzdCA9ICQoJyNwYXVzZWRUb2FzdCcpLmRldGFjaCgpO1xuZ2FtZS5wcm9ncmVzc2JhciA9ICQoJyNwcm9ncmVzc2JhcicpLmRldGFjaCgpO1xuZ2FtZS5nYW1lT3ZlclRvYXN0ID0gJCgnI2dhbWVPdmVyVG9hc3QnKS5kZXRhY2goKTtcbmdhbWUuaGlnaFNjb3JlVG9hc3QgPSAkKCcjaGlnaFNjb3JlVG9hc3QnKS5kZXRhY2goKTtcblxuJCgnI3NjcmVlbicpLnNob3coKTtcbi8vIGxvYWRUb2FzdFRpdGxlLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbi8vICQoJ2xvYWRUb2FzdFRpdGxlJykuaGlkZSgpXG5cbiAgICAvLyAkKCcjbG9hZFRvYXN0VGl0bGUnKS5jc3MoXCJkaXNwbGF5XCIsIFwibm9uZVwiKTtcblxuICAgIGdhbWUuZXhwbG9zaW9uSW1hZ2VzLnB1c2goIGdhbWUudG1wMSwgZ2FtZS50bXAyLCBnYW1lLnRtcDMsIGdhbWUudG1wNCxcbiAgICAgICAgZ2FtZS50bXA1LCBnYW1lLnRtcDYsIGdhbWUudG1wNywgZ2FtZS50bXA4LCBnYW1lLnRtcDksIGdhbWUudG1wMTAsXG4gICAgICAgIGdhbWUudG1wMTEsIGdhbWUudG1wMTIsZ2FtZS50bXAxMywgZ2FtZS50bXAxNCwgZ2FtZS50bXAxNSwgZ2FtZS50bXAxNiApO1xuICAgICAgICAgICAgXG4gICAgLy8gZ2FtZS5sb2FkTGV2ZWwoMCk7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIC8vIERlbGF5IHN0YXJ0IG9mIGdhbWUgdG8gbWFrZSBzdXJlIGFsbCBhc3NldHMgaGF2ZSBsb2FkZWRcbiAgICAvLyBUT0RPIGNoYW5nZSB0byBhIHByb21pc2UvY2FsbGJhY2tcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICAgIGdhbWUuc3RhcnQoKTtcbiAgICB9LCAyNTApXG59KTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOzs7QUFDQTtBQUFBO0FBQ0E7QUFEQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBY0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUZBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFJQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBRUE7OztBQUVBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFIQTtBQUNBO0FBS0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFMQTtBQUNBO0FBT0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7OztBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBOzs7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7OztBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBREE7QUFHQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQUlBOzs7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7OztBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBREE7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBSUE7QUFDQTtBQUVBO0FBQ0E7QUFHQTtBQUVBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFiQTtBQUNBO0FBZ0JBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQW5CQTtBQXNCQTtBQUVBO0FBRUE7QUFDQTtBQUdBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBakJBO0FBb0JBO0FBRUE7QUFFQTtBQUNBO0FBR0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBaEJBO0FBQ0E7QUFrQkE7OztBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUFBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFBQTtBQUtBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUVBOzs7Ozs7QUFJQTs7O0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFBQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQUE7QUFLQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFFQTs7Ozs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBY0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUtBO0FBS0E7QUFBQTtBQUdBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBOzs7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFFQTtBQUVBOzs7Ozs7QUFJQTs7O0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBRUE7Ozs7OztBQUdBOzs7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFHQTs7Ozs7Ozs7QUFRQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFQQTtBQVNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFQQTtBQVNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFQQTtBQVNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFQQTtBQUNBO0FBV0E7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFGQTtBQUNBO0FBSUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUZBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRkE7QUFJQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFmQTtBQUNBO0FBaUJBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFGQTtBQUdBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBSUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBR0E7QUFFQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./client/src/game.js\n");

/***/ })

/******/ });